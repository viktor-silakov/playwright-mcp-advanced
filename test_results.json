{
  "config": {
    "configFile": "/Users/a1/Projects/playwright-mcp-advanced/playwright.config.ts",
    "rootDir": "/Users/a1/Projects/playwright-mcp-advanced/tests",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 6
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "json"
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/Users/a1/Projects/playwright-mcp-advanced/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 6
        },
        "id": "chrome",
        "name": "chrome",
        "testDir": "/Users/a1/Projects/playwright-mcp-advanced/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 15000
      },
      {
        "outputDir": "/Users/a1/Projects/playwright-mcp-advanced/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 6
        },
        "id": "msedge",
        "name": "msedge",
        "testDir": "/Users/a1/Projects/playwright-mcp-advanced/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 15000
      },
      {
        "outputDir": "/Users/a1/Projects/playwright-mcp-advanced/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 6
        },
        "id": "chromium",
        "name": "chromium",
        "testDir": "/Users/a1/Projects/playwright-mcp-advanced/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 15000
      },
      {
        "outputDir": "/Users/a1/Projects/playwright-mcp-advanced/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 6
        },
        "id": "firefox",
        "name": "firefox",
        "testDir": "/Users/a1/Projects/playwright-mcp-advanced/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 15000
      },
      {
        "outputDir": "/Users/a1/Projects/playwright-mcp-advanced/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 6
        },
        "id": "webkit",
        "name": "webkit",
        "testDir": "/Users/a1/Projects/playwright-mcp-advanced/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 15000
      },
      {
        "outputDir": "/Users/a1/Projects/playwright-mcp-advanced/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 6
        },
        "id": "chromium-extension",
        "name": "chromium-extension",
        "testDir": "/Users/a1/Projects/playwright-mcp-advanced/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 15000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.53.0",
    "workers": 6,
    "webServer": null
  },
  "suites": [
    {
      "title": "capabilities.spec.ts",
      "file": "capabilities.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "test snapshot tool list",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 0,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 613,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:13.994Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "6bcb5a9b4e27408c434c-204d4f6046e6ec2ae053",
          "file": "capabilities.spec.ts",
          "line": 19,
          "column": 1
        },
        {
          "title": "test vision tool list",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 1,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 612,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:13.999Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "6bcb5a9b4e27408c434c-f7ad90030dc598a308d5",
          "file": "capabilities.spec.ts",
          "line": 52,
          "column": 1
        },
        {
          "title": "test capabilities",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 2,
                  "parallelIndex": 2,
                  "status": "passed",
                  "duration": 619,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:13.990Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "6bcb5a9b4e27408c434c-0c481cf9bf0b5bd908e9",
          "file": "capabilities.spec.ts",
          "line": 88,
          "column": 1
        }
      ]
    },
    {
      "title": "cdp.spec.ts",
      "file": "cdp.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "cdp server",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 3,
                  "parallelIndex": 3,
                  "status": "failed",
                  "duration": 3136,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- generic [active] [ref=e1]: Hello, world!\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// Navigate to http://localhost:8919/hello-world\u001b[39m\n\u001b[31mawait page.goto('http://localhost:8919/hello-world');\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8919/hello-world\u001b[39m\n\u001b[31m- Page Title: Title\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]: Hello, world!\u001b[39m\n\u001b[31m```\"\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- generic [active] [ref=e1]: Hello, world!\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// Navigate to http://localhost:8919/hello-world\u001b[39m\n\u001b[31mawait page.goto('http://localhost:8919/hello-world');\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8919/hello-world\u001b[39m\n\u001b[31m- Page Title: Title\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]: Hello, world!\u001b[39m\n\u001b[31m```\"\u001b[39m\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/cdp.spec.ts:28:7",
                    "location": {
                      "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/cdp.spec.ts",
                      "column": 7,
                      "line": 28
                    },
                    "snippet": "  26 |     name: 'browser_navigate',\n  27 |     arguments: { url: server.HELLO_WORLD },\n> 28 |   })).toContainTextContent(`- generic [active] [ref=e1]: Hello, world!`);\n     |       ^\n  29 | });\n  30 |\n  31 | test('cdp server reuse tab', async ({ cdpServer, startClient, server }) => {"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/cdp.spec.ts",
                        "column": 7,
                        "line": 28
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- generic [active] [ref=e1]: Hello, world!\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// Navigate to http://localhost:8919/hello-world\u001b[39m\n\u001b[31mawait page.goto('http://localhost:8919/hello-world');\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8919/hello-world\u001b[39m\n\u001b[31m- Page Title: Title\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]: Hello, world!\u001b[39m\n\u001b[31m```\"\u001b[39m\n\n  26 |     name: 'browser_navigate',\n  27 |     arguments: { url: server.HELLO_WORLD },\n> 28 |   })).toContainTextContent(`- generic [active] [ref=e1]: Hello, world!`);\n     |       ^\n  29 | });\n  30 |\n  31 | test('cdp server reuse tab', async ({ cdpServer, startClient, server }) => {\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/cdp.spec.ts:28:7"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:13.993Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/Users/a1/Projects/playwright-mcp-advanced/test-results/cdp-cdp-server-chrome/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/cdp.spec.ts",
                    "column": 7,
                    "line": 28
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "48177857a8c061cee071-42e647a822fc99eb4e75",
          "file": "cdp.spec.ts",
          "line": 22,
          "column": 1
        },
        {
          "title": "cdp server reuse tab",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 4,
                  "parallelIndex": 4,
                  "status": "failed",
                  "duration": 3107,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[33m@@ -5,7 +5,7 @@\u001b[39m\n\n\u001b[2m  - Page URL: http://localhost:8923/hello-world\u001b[22m\n\u001b[2m  - Page Title: Title\u001b[22m\n\u001b[2m  - Page Snapshot\u001b[22m\n\u001b[2m  ```yaml\u001b[22m\n\u001b[32m- - generic\u001b[7m [active]\u001b[27m [ref=e1]: Hello, world!\u001b[39m\n\u001b[31m+ - generic [ref=e1]: Hello, world!\u001b[39m\n\u001b[2m  ```\u001b[22m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[33m@@ -5,7 +5,7 @@\u001b[39m\n\n\u001b[2m  - Page URL: http://localhost:8923/hello-world\u001b[22m\n\u001b[2m  - Page Title: Title\u001b[22m\n\u001b[2m  - Page Snapshot\u001b[22m\n\u001b[2m  ```yaml\u001b[22m\n\u001b[32m- - generic\u001b[7m [active]\u001b[27m [ref=e1]: Hello, world!\u001b[39m\n\u001b[31m+ - generic [ref=e1]: Hello, world!\u001b[39m\n\u001b[2m  ```\u001b[22m\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/cdp.spec.ts:48:7",
                    "location": {
                      "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/cdp.spec.ts",
                      "column": 7,
                      "line": 48
                    },
                    "snippet": "  46 |   expect(await client.callTool({\n  47 |     name: 'browser_snapshot',\n> 48 |   })).toHaveTextContent(`\n     |       ^\n  49 | - Ran Playwright code:\n  50 | \\`\\`\\`js\n  51 | // <internal code to capture accessibility snapshot>"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/cdp.spec.ts",
                        "column": 7,
                        "line": 48
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[33m@@ -5,7 +5,7 @@\u001b[39m\n\n\u001b[2m  - Page URL: http://localhost:8923/hello-world\u001b[22m\n\u001b[2m  - Page Title: Title\u001b[22m\n\u001b[2m  - Page Snapshot\u001b[22m\n\u001b[2m  ```yaml\u001b[22m\n\u001b[32m- - generic\u001b[7m [active]\u001b[27m [ref=e1]: Hello, world!\u001b[39m\n\u001b[31m+ - generic [ref=e1]: Hello, world!\u001b[39m\n\u001b[2m  ```\u001b[22m\n\n  46 |   expect(await client.callTool({\n  47 |     name: 'browser_snapshot',\n> 48 |   })).toHaveTextContent(`\n     |       ^\n  49 | - Ran Playwright code:\n  50 | \\`\\`\\`js\n  51 | // <internal code to capture accessibility snapshot>\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/cdp.spec.ts:48:7"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:13.996Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/Users/a1/Projects/playwright-mcp-advanced/test-results/cdp-cdp-server-reuse-tab-chrome/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/cdp.spec.ts",
                    "column": 7,
                    "line": 48
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "48177857a8c061cee071-4e9eb5aa3edd1c2b7757",
          "file": "cdp.spec.ts",
          "line": 31,
          "column": 1
        },
        {
          "title": "should throw connection error and allow re-connecting",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 5,
                  "parallelIndex": 5,
                  "status": "failed",
                  "duration": 2618,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- generic [active] [ref=e1]: Hello, world!\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// Navigate to http://localhost:8927/\u001b[39m\n\u001b[31mawait page.goto('http://localhost:8927/');\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8927/\u001b[39m\n\u001b[31m- Page Title: Title\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]: Hello, world!\u001b[39m\n\u001b[31m```\"\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- generic [active] [ref=e1]: Hello, world!\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// Navigate to http://localhost:8927/\u001b[39m\n\u001b[31mawait page.goto('http://localhost:8927/');\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8927/\u001b[39m\n\u001b[31m- Page Title: Title\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]: Hello, world!\u001b[39m\n\u001b[31m```\"\u001b[39m\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/cdp.spec.ts:79:7",
                    "location": {
                      "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/cdp.spec.ts",
                      "column": 7,
                      "line": 79
                    },
                    "snippet": "  77 |     name: 'browser_navigate',\n  78 |     arguments: { url: server.PREFIX },\n> 79 |   })).toContainTextContent(`- generic [active] [ref=e1]: Hello, world!`);\n     |       ^\n  80 | });\n  81 |\n  82 | // NOTE: Can be removed when we drop Node.js 18 support and changed to import.meta.filename."
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/cdp.spec.ts",
                        "column": 7,
                        "line": 79
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- generic [active] [ref=e1]: Hello, world!\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// Navigate to http://localhost:8927/\u001b[39m\n\u001b[31mawait page.goto('http://localhost:8927/');\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8927/\u001b[39m\n\u001b[31m- Page Title: Title\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]: Hello, world!\u001b[39m\n\u001b[31m```\"\u001b[39m\n\n  77 |     name: 'browser_navigate',\n  78 |     arguments: { url: server.PREFIX },\n> 79 |   })).toContainTextContent(`- generic [active] [ref=e1]: Hello, world!`);\n     |       ^\n  80 | });\n  81 |\n  82 | // NOTE: Can be removed when we drop Node.js 18 support and changed to import.meta.filename.\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/cdp.spec.ts:79:7"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:13.995Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "error-context",
                      "contentType": "text/markdown",
                      "path": "/Users/a1/Projects/playwright-mcp-advanced/test-results/cdp-should-throw-connection-error-and-allow-re-connecting-chrome/error-context.md"
                    }
                  ],
                  "errorLocation": {
                    "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/cdp.spec.ts",
                    "column": 7,
                    "line": 79
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "48177857a8c061cee071-a2d195a1800a3c666553",
          "file": "cdp.spec.ts",
          "line": 63,
          "column": 1
        },
        {
          "title": "does not support --device",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 2,
                  "parallelIndex": 2,
                  "status": "passed",
                  "duration": 1145,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:14.628Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "48177857a8c061cee071-ebf94bf0240a03109b10",
          "file": "cdp.spec.ts",
          "line": 85,
          "column": 1
        }
      ]
    },
    {
      "title": "config.spec.ts",
      "file": "config.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "config user data dir",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 0,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 1874,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:14.627Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "9196cb1f5e62547dc5c9-4f65571d0171511cf9db",
          "file": "config.spec.ts",
          "line": 22,
          "column": 1
        }
      ],
      "suites": [
        {
          "title": "",
          "file": "config.spec.ts",
          "line": 46,
          "column": 6,
          "specs": [
            {
              "title": "browserName",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 15000,
                  "annotations": [
                    {
                      "type": "issue",
                      "description": "https://github.com/microsoft/playwright-mcp/issues/458"
                    }
                  ],
                  "expectedStatus": "passed",
                  "projectId": "chrome",
                  "projectName": "chrome",
                  "results": [
                    {
                      "workerIndex": 1,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 1133,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Firefox\"\u001b[39m\nReceived string:    \u001b[31m\"Error: Browser specified in your config is not installed. Either install it (likely) or change the config.\"\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Firefox\"\u001b[39m\nReceived string:    \u001b[31m\"Error: Browser specified in your config is not installed. Either install it (likely) or change the config.\"\u001b[39m\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/config.spec.ts:61:9",
                        "location": {
                          "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/config.spec.ts",
                          "column": 9,
                          "line": 61
                        },
                        "snippet": "  59 |       name: 'browser_navigate',\n  60 |       arguments: { url: 'data:text/html,<script>document.title = navigator.userAgent</script>' },\n> 61 |     })).toContainTextContent(`Firefox`);\n     |         ^\n  62 |   });\n  63 | });\n  64 |"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/config.spec.ts",
                            "column": 9,
                            "line": 61
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"Firefox\"\u001b[39m\nReceived string:    \u001b[31m\"Error: Browser specified in your config is not installed. Either install it (likely) or change the config.\"\u001b[39m\n\n  59 |       name: 'browser_navigate',\n  60 |       arguments: { url: 'data:text/html,<script>document.title = navigator.userAgent</script>' },\n> 61 |     })).toContainTextContent(`Firefox`);\n     |         ^\n  62 |   });\n  63 | });\n  64 |\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/config.spec.ts:61:9"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-18T04:04:14.629Z",
                      "annotations": [
                        {
                          "type": "issue",
                          "description": "https://github.com/microsoft/playwright-mcp/issues/458"
                        }
                      ],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/config.spec.ts",
                        "column": 9,
                        "line": 61
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "9196cb1f5e62547dc5c9-33bf521d7b409977be8d",
              "file": "config.spec.ts",
              "line": 48,
              "column": 3
            }
          ]
        }
      ]
    },
    {
      "title": "console.spec.ts",
      "file": "console.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "browser_console_messages",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 6,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 1458,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:16.453Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "ef58feb76c0befb42c6d-4e921b00060f5f4888d2",
          "file": "console.spec.ts",
          "line": 19,
          "column": 1
        },
        {
          "title": "browser_console_messages (page error)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 2,
                  "parallelIndex": 2,
                  "status": "passed",
                  "duration": 1396,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:15.782Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "ef58feb76c0befb42c6d-21e81ef28d34caa9cf99",
          "file": "console.spec.ts",
          "line": 46,
          "column": 1
        }
      ]
    },
    {
      "title": "core.spec.ts",
      "file": "core.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "browser_navigate",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 0,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 1390,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:16.518Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d064c8ac994e44e7c99b-49a0f78ea6ab45e0b49a",
          "file": "core.spec.ts",
          "line": 19,
          "column": 1
        },
        {
          "title": "browser_click",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 7,
                  "parallelIndex": 5,
                  "status": "passed",
                  "duration": 2955,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:17.235Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d064c8ac994e44e7c99b-aa4523eb258dba9aa6cf",
          "file": "core.spec.ts",
          "line": 40,
          "column": 1
        },
        {
          "title": "browser_click (double)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 8,
                  "parallelIndex": 4,
                  "status": "passed",
                  "duration": 3222,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:18.045Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d064c8ac994e44e7c99b-6b518b877db30f7ad5c7",
          "file": "core.spec.ts",
          "line": 73,
          "column": 1
        },
        {
          "title": "browser_select_option",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 9,
                  "parallelIndex": 3,
                  "status": "passed",
                  "duration": 3196,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:18.044Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d064c8ac994e44e7c99b-791721d8ab4f8ad2ef2c",
          "file": "core.spec.ts",
          "line": 112,
          "column": 1
        },
        {
          "title": "browser_select_option (multiple)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 2,
                  "parallelIndex": 2,
                  "status": "passed",
                  "duration": 2949,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:17.196Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d064c8ac994e44e7c99b-668299abbf44491ecbbb",
          "file": "core.spec.ts",
          "line": 151,
          "column": 1
        },
        {
          "title": "browser_type",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 0,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 3231,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:17.914Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d064c8ac994e44e7c99b-116a6e93cee4d2da9bd4",
          "file": "core.spec.ts",
          "line": 192,
          "column": 1
        },
        {
          "title": "browser_type (slowly)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 6,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 3321,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:17.932Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d064c8ac994e44e7c99b-070debd049fb85b5f6bf",
          "file": "core.spec.ts",
          "line": 220,
          "column": 1
        },
        {
          "title": "browser_resize",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 2,
                  "parallelIndex": 2,
                  "status": "passed",
                  "duration": 2959,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "steps": [
                    {
                      "title": "Expect \"poll toContainTextContent\"",
                      "duration": 429
                    }
                  ],
                  "startTime": "2025-07-18T04:04:20.153Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d064c8ac994e44e7c99b-267b97abdfb8aeb43427",
          "file": "core.spec.ts",
          "line": 250,
          "column": 1
        },
        {
          "title": "old locator error message",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 7,
                  "parallelIndex": 5,
                  "status": "passed",
                  "duration": 7597,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:20.199Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d064c8ac994e44e7c99b-17ee0e7854b9cf5e7e62",
          "file": "core.spec.ts",
          "line": 279,
          "column": 1
        },
        {
          "title": "visibility: hidden > visible should be shown",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [
                {
                  "type": "issue",
                  "description": "https://github.com/microsoft/playwright-mcp/issues/535"
                }
              ],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 0,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 2215,
                  "errors": [],
                  "stdout": [
                    {
                      "text": "Button not detected in accessibility tree, skipping assertion\n"
                    }
                  ],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:21.232Z",
                  "annotations": [
                    {
                      "type": "issue",
                      "description": "https://github.com/microsoft/playwright-mcp/issues/535"
                    }
                  ],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d064c8ac994e44e7c99b-2177ed0c814c0eeb4448",
          "file": "core.spec.ts",
          "line": 317,
          "column": 1
        }
      ]
    },
    {
      "title": "device.spec.ts",
      "file": "device.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "--device should work",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 6,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 2249,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:21.314Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d52a75ab1f83e9bd0b93-e48e8894499ea9618e7e",
          "file": "device.spec.ts",
          "line": 19,
          "column": 1
        }
      ]
    },
    {
      "title": "dialogs.spec.ts",
      "file": "dialogs.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "alert dialog",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 9,
                  "parallelIndex": 3,
                  "status": "passed",
                  "duration": 2305,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:21.315Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "c8c8ce29fa4987e6487c-471d4cdddce1b348be0b",
          "file": "dialogs.spec.ts",
          "line": 19,
          "column": 1
        },
        {
          "title": "two alert dialogs",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 8,
                  "parallelIndex": 4,
                  "status": "passed",
                  "duration": 2302,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:21.320Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "c8c8ce29fa4987e6487c-503fbc6ea971276c85ad",
          "file": "dialogs.spec.ts",
          "line": 61,
          "column": 1
        },
        {
          "title": "confirm dialog (true)",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 2,
                  "parallelIndex": 2,
                  "status": "failed",
                  "duration": 2207,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- Page Snapshot\u001b[39m\n\u001b[32m```yaml\u001b[39m\n\u001b[32m- generic [active] [ref=e1]: \\\"true\\\"\u001b[39m\n\u001b[32m```\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// <internal code to handle \\\"confirm\\\" dialog>\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8915/\u001b[39m\n\u001b[31m- Page Title: Title\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]: \\\"true\\\"\u001b[39m\n\u001b[31m```\"\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- Page Snapshot\u001b[39m\n\u001b[32m```yaml\u001b[39m\n\u001b[32m- generic [active] [ref=e1]: \\\"true\\\"\u001b[39m\n\u001b[32m```\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// <internal code to handle \\\"confirm\\\" dialog>\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8915/\u001b[39m\n\u001b[31m- Page Title: Title\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]: \\\"true\\\"\u001b[39m\n\u001b[31m```\"\u001b[39m\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/dialogs.spec.ts:141:18",
                    "location": {
                      "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/dialogs.spec.ts",
                      "column": 18,
                      "line": 141
                    },
                    "snippet": "  139 |   expect(result).not.toContainTextContent('### Modal state');\n  140 |   expect(result).toContainTextContent('// <internal code to handle \"confirm\" dialog>');\n> 141 |   expect(result).toContainTextContent(`- Page Snapshot\n      |                  ^\n  142 | \\`\\`\\`yaml\n  143 | - generic [active] [ref=e1]: \"true\"\n  144 | \\`\\`\\``);"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/dialogs.spec.ts",
                        "column": 18,
                        "line": 141
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- Page Snapshot\u001b[39m\n\u001b[32m```yaml\u001b[39m\n\u001b[32m- generic [active] [ref=e1]: \\\"true\\\"\u001b[39m\n\u001b[32m```\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// <internal code to handle \\\"confirm\\\" dialog>\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8915/\u001b[39m\n\u001b[31m- Page Title: Title\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]: \\\"true\\\"\u001b[39m\n\u001b[31m```\"\u001b[39m\n\n  139 |   expect(result).not.toContainTextContent('### Modal state');\n  140 |   expect(result).toContainTextContent('// <internal code to handle \"confirm\" dialog>');\n> 141 |   expect(result).toContainTextContent(`- Page Snapshot\n      |                  ^\n  142 | \\`\\`\\`yaml\n  143 | - generic [active] [ref=e1]: \"true\"\n  144 | \\`\\`\\``);\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/dialogs.spec.ts:141:18"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:23.206Z",
                  "annotations": [],
                  "attachments": [],
                  "errorLocation": {
                    "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/dialogs.spec.ts",
                    "column": 18,
                    "line": 141
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "c8c8ce29fa4987e6487c-5f831fb1927bd2c1a0b4",
          "file": "dialogs.spec.ts",
          "line": 110,
          "column": 1
        },
        {
          "title": "confirm dialog (false)",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 0,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 1878,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- Page Snapshot\u001b[39m\n\u001b[32m```yaml\u001b[39m\n\u001b[32m- generic [active] [ref=e1]: \\\"false\\\"\u001b[39m\n\u001b[32m```\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// <internal code to handle \\\"confirm\\\" dialog>\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8907/\u001b[39m\n\u001b[31m- Page Title: Title\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]: \\\"false\\\"\u001b[39m\n\u001b[31m```\"\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- Page Snapshot\u001b[39m\n\u001b[32m```yaml\u001b[39m\n\u001b[32m- generic [active] [ref=e1]: \\\"false\\\"\u001b[39m\n\u001b[32m```\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// <internal code to handle \\\"confirm\\\" dialog>\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8907/\u001b[39m\n\u001b[31m- Page Title: Title\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]: \\\"false\\\"\u001b[39m\n\u001b[31m```\"\u001b[39m\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/dialogs.spec.ts:176:18",
                    "location": {
                      "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/dialogs.spec.ts",
                      "column": 18,
                      "line": 176
                    },
                    "snippet": "  174 |   });\n  175 |\n> 176 |   expect(result).toContainTextContent(`- Page Snapshot\n      |                  ^\n  177 | \\`\\`\\`yaml\n  178 | - generic [active] [ref=e1]: \"false\"\n  179 | \\`\\`\\``);"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/dialogs.spec.ts",
                        "column": 18,
                        "line": 176
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- Page Snapshot\u001b[39m\n\u001b[32m```yaml\u001b[39m\n\u001b[32m- generic [active] [ref=e1]: \\\"false\\\"\u001b[39m\n\u001b[32m```\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// <internal code to handle \\\"confirm\\\" dialog>\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8907/\u001b[39m\n\u001b[31m- Page Title: Title\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]: \\\"false\\\"\u001b[39m\n\u001b[31m```\"\u001b[39m\n\n  174 |   });\n  175 |\n> 176 |   expect(result).toContainTextContent(`- Page Snapshot\n      |                  ^\n  177 | \\`\\`\\`yaml\n  178 | - generic [active] [ref=e1]: \"false\"\n  179 | \\`\\`\\``);\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/dialogs.spec.ts:176:18"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:23.501Z",
                  "annotations": [],
                  "attachments": [],
                  "errorLocation": {
                    "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/dialogs.spec.ts",
                    "column": 18,
                    "line": 176
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "c8c8ce29fa4987e6487c-e6ade1debc5705d24821",
          "file": "dialogs.spec.ts",
          "line": 147,
          "column": 1
        },
        {
          "title": "prompt dialog",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 6,
                  "parallelIndex": 1,
                  "status": "failed",
                  "duration": 1779,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- Page Snapshot\u001b[39m\n\u001b[32m```yaml\u001b[39m\n\u001b[32m- generic [active] [ref=e1]: Answer\u001b[39m\n\u001b[32m```\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// <internal code to handle \\\"prompt\\\" dialog>\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8931/\u001b[39m\n\u001b[31m- Page Title: Title\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]: Answer\u001b[39m\n\u001b[31m```\"\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- Page Snapshot\u001b[39m\n\u001b[32m```yaml\u001b[39m\n\u001b[32m- generic [active] [ref=e1]: Answer\u001b[39m\n\u001b[32m```\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// <internal code to handle \\\"prompt\\\" dialog>\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8931/\u001b[39m\n\u001b[31m- Page Title: Title\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]: Answer\u001b[39m\n\u001b[31m```\"\u001b[39m\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/dialogs.spec.ts:212:18",
                    "location": {
                      "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/dialogs.spec.ts",
                      "column": 18,
                      "line": 212
                    },
                    "snippet": "  210 |   });\n  211 |\n> 212 |   expect(result).toContainTextContent(`- Page Snapshot\n      |                  ^\n  213 | \\`\\`\\`yaml\n  214 | - generic [active] [ref=e1]: Answer\n  215 | \\`\\`\\``);"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/dialogs.spec.ts",
                        "column": 18,
                        "line": 212
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- Page Snapshot\u001b[39m\n\u001b[32m```yaml\u001b[39m\n\u001b[32m- generic [active] [ref=e1]: Answer\u001b[39m\n\u001b[32m```\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// <internal code to handle \\\"prompt\\\" dialog>\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8931/\u001b[39m\n\u001b[31m- Page Title: Title\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]: Answer\u001b[39m\n\u001b[31m```\"\u001b[39m\n\n  210 |   });\n  211 |\n> 212 |   expect(result).toContainTextContent(`- Page Snapshot\n      |                  ^\n  213 | \\`\\`\\`yaml\n  214 | - generic [active] [ref=e1]: Answer\n  215 | \\`\\`\\``);\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/dialogs.spec.ts:212:18"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:23.595Z",
                  "annotations": [],
                  "attachments": [],
                  "errorLocation": {
                    "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/dialogs.spec.ts",
                    "column": 18,
                    "line": 212
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "c8c8ce29fa4987e6487c-e15c0546c2df572a1233",
          "file": "dialogs.spec.ts",
          "line": 182,
          "column": 1
        },
        {
          "title": "alert dialog w/ race",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 8,
                  "parallelIndex": 4,
                  "status": "passed",
                  "duration": 1816,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:23.650Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "c8c8ce29fa4987e6487c-707784f268c25124a50c",
          "file": "dialogs.spec.ts",
          "line": 218,
          "column": 1
        }
      ]
    },
    {
      "title": "evaluate.spec.ts",
      "file": "evaluate.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "browser_evaluate",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 9,
                  "parallelIndex": 3,
                  "status": "failed",
                  "duration": 1604,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"\\\"Title\\\"\"\u001b[39m\nReceived string:    \u001b[31m\"TypeError: receiver._evaluateFunction is not a function\"\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"\\\"Title\\\"\"\u001b[39m\nReceived string:    \u001b[31m\"TypeError: receiver._evaluateFunction is not a function\"\u001b[39m\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/evaluate.spec.ts:31:18",
                    "location": {
                      "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/evaluate.spec.ts",
                      "column": 18,
                      "line": 31
                    },
                    "snippet": "  29 |     },\n  30 |   });\n> 31 |   expect(result).toContainTextContent(`\"Title\"`);\n     |                  ^\n  32 | });\n  33 |\n  34 | test('browser_evaluate (element)', async ({ client, server }) => {"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/evaluate.spec.ts",
                        "column": 18,
                        "line": 31
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"\\\"Title\\\"\"\u001b[39m\nReceived string:    \u001b[31m\"TypeError: receiver._evaluateFunction is not a function\"\u001b[39m\n\n  29 |     },\n  30 |   });\n> 31 |   expect(result).toContainTextContent(`\"Title\"`);\n     |                  ^\n  32 | });\n  33 |\n  34 | test('browser_evaluate (element)', async ({ client, server }) => {\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/evaluate.spec.ts:31:18"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:23.709Z",
                  "annotations": [],
                  "attachments": [],
                  "errorLocation": {
                    "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/evaluate.spec.ts",
                    "column": 18,
                    "line": 31
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "93845055516538994e4a-2d8768b6fbb8f4b3a770",
          "file": "evaluate.spec.ts",
          "line": 19,
          "column": 1
        },
        {
          "title": "browser_evaluate (element)",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 10,
                  "parallelIndex": 3,
                  "status": "failed",
                  "duration": 1122,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- Result: \\\"red\\\"\"\u001b[39m\nReceived string:    \u001b[31m\"TypeError: receiver._evaluateFunction is not a function\"\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- Result: \\\"red\\\"\"\u001b[39m\nReceived string:    \u001b[31m\"TypeError: receiver._evaluateFunction is not a function\"\u001b[39m\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/evaluate.spec.ts:50:7",
                    "location": {
                      "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/evaluate.spec.ts",
                      "column": 7,
                      "line": 50
                    },
                    "snippet": "  48 |       ref: 'e1',\n  49 |     },\n> 50 |   })).toContainTextContent(`- Result: \"red\"`);\n     |       ^\n  51 | });\n  52 |"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/evaluate.spec.ts",
                        "column": 7,
                        "line": 50
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- Result: \\\"red\\\"\"\u001b[39m\nReceived string:    \u001b[31m\"TypeError: receiver._evaluateFunction is not a function\"\u001b[39m\n\n  48 |       ref: 'e1',\n  49 |     },\n> 50 |   })).toContainTextContent(`- Result: \"red\"`);\n     |       ^\n  51 | });\n  52 |\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/evaluate.spec.ts:50:7"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:25.899Z",
                  "annotations": [],
                  "attachments": [],
                  "errorLocation": {
                    "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/evaluate.spec.ts",
                    "column": 7,
                    "line": 50
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "93845055516538994e4a-9a2c4182893f59ed81a5",
          "file": "evaluate.spec.ts",
          "line": 34,
          "column": 1
        }
      ]
    },
    {
      "title": "extension.spec.ts",
      "file": "extension.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "extension mode - CDP relay server starts",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 11,
                  "parallelIndex": 1,
                  "status": "failed",
                  "duration": 517,
                  "error": {
                    "message": "McpError: MCP error -32000: Connection closed",
                    "stack": "McpError: MCP error -32000: Connection closed\n    at Client._onclose (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:312:19)\n    at StdioClientTransport._transport.onclose (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:283:12)\n    at ChildProcess.<anonymous> (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/client/stdio.ts:150:21)"
                  },
                  "errors": [
                    {
                      "message": "McpError: MCP error -32000: Connection closed\n    at Client._onclose (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:312:19)\n    at StdioClientTransport._transport.onclose (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:283:12)\n    at ChildProcess.<anonymous> (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/client/stdio.ts:150:21)"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:25.913Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "da119938d3268322a91b-bb3be07f97cac059f226",
          "file": "extension.spec.ts",
          "line": 19,
          "column": 1
        },
        {
          "title": "extension mode - capabilities work",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 12,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 495,
                  "error": {
                    "message": "McpError: MCP error -32000: Connection closed",
                    "stack": "McpError: MCP error -32000: Connection closed\n    at Client._onclose (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:312:19)\n    at StdioClientTransport._transport.onclose (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:283:12)\n    at ChildProcess.<anonymous> (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/client/stdio.ts:150:21)"
                  },
                  "errors": [
                    {
                      "message": "McpError: MCP error -32000: Connection closed\n    at Client._onclose (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:312:19)\n    at StdioClientTransport._transport.onclose (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:283:12)\n    at ChildProcess.<anonymous> (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/client/stdio.ts:150:21)"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:25.933Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "da119938d3268322a91b-afd53a8cb25edb886db1",
          "file": "extension.spec.ts",
          "line": 44,
          "column": 1
        },
        {
          "title": "extension mode - error handling for no connection",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 13,
                  "parallelIndex": 2,
                  "status": "failed",
                  "duration": 497,
                  "error": {
                    "message": "McpError: MCP error -32000: Connection closed",
                    "stack": "McpError: MCP error -32000: Connection closed\n    at Client._onclose (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:312:19)\n    at StdioClientTransport._transport.onclose (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:283:12)\n    at ChildProcess.<anonymous> (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/client/stdio.ts:150:21)"
                  },
                  "errors": [
                    {
                      "message": "McpError: MCP error -32000: Connection closed\n    at Client._onclose (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:312:19)\n    at StdioClientTransport._transport.onclose (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:283:12)\n    at ChildProcess.<anonymous> (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/client/stdio.ts:150:21)"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:25.927Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "da119938d3268322a91b-ba6668780d9a3512ccd5",
          "file": "extension.spec.ts",
          "line": 61,
          "column": 1
        },
        {
          "title": "extension mode - server configuration",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 8,
                  "parallelIndex": 4,
                  "status": "failed",
                  "duration": 569,
                  "error": {
                    "message": "McpError: MCP error -32000: Connection closed",
                    "stack": "McpError: MCP error -32000: Connection closed\n    at Client._onclose (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:312:19)\n    at StdioClientTransport._transport.onclose (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:283:12)\n    at ChildProcess.<anonymous> (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/client/stdio.ts:150:21)"
                  },
                  "errors": [
                    {
                      "message": "McpError: MCP error -32000: Connection closed\n    at Client._onclose (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:312:19)\n    at StdioClientTransport._transport.onclose (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:283:12)\n    at ChildProcess.<anonymous> (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/client/stdio.ts:150:21)"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:25.488Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "da119938d3268322a91b-b2c331dea832209e92ee",
          "file": "extension.spec.ts",
          "line": 76,
          "column": 1
        },
        {
          "title": "extension mode - tool schemas are valid",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 14,
                  "parallelIndex": 4,
                  "status": "failed",
                  "duration": 562,
                  "error": {
                    "message": "McpError: MCP error -32000: Connection closed",
                    "stack": "McpError: MCP error -32000: Connection closed\n    at Client._onclose (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:312:19)\n    at StdioClientTransport._transport.onclose (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:283:12)\n    at ChildProcess.<anonymous> (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/client/stdio.ts:150:21)"
                  },
                  "errors": [
                    {
                      "message": "McpError: MCP error -32000: Connection closed\n    at Client._onclose (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:312:19)\n    at StdioClientTransport._transport.onclose (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:283:12)\n    at ChildProcess.<anonymous> (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/client/stdio.ts:150:21)"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:26.449Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "da119938d3268322a91b-a31ae0f9fd432c9c8293",
          "file": "extension.spec.ts",
          "line": 91,
          "column": 1
        },
        {
          "title": "extension mode - compatible with existing tools",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 15,
                  "parallelIndex": 2,
                  "status": "failed",
                  "duration": 562,
                  "error": {
                    "message": "McpError: MCP error -32000: Connection closed",
                    "stack": "McpError: MCP error -32000: Connection closed\n    at Client._onclose (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:312:19)\n    at StdioClientTransport._transport.onclose (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:283:12)\n    at ChildProcess.<anonymous> (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/client/stdio.ts:150:21)"
                  },
                  "errors": [
                    {
                      "message": "McpError: MCP error -32000: Connection closed\n    at Client._onclose (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:312:19)\n    at StdioClientTransport._transport.onclose (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:283:12)\n    at ChildProcess.<anonymous> (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/client/stdio.ts:150:21)"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:26.829Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "da119938d3268322a91b-b7cc80eac08082f12319",
          "file": "extension.spec.ts",
          "line": 110,
          "column": 1
        }
      ]
    },
    {
      "title": "files.spec.ts",
      "file": "files.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "browser_file_upload",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 16,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 1349,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"\u001b[39m\n\u001b[32m```yaml\u001b[39m\n\u001b[32m- generic [active] [ref=e1]:\u001b[39m\n\u001b[32m  - button \\\"Choose File\\\" [ref=e2]\u001b[39m\n\u001b[32m  - button \\\"Button\\\" [ref=e3]\u001b[39m\n\u001b[32m```\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// Navigate to http://localhost:8971/\u001b[39m\n\u001b[31mawait page.goto('http://localhost:8971/');\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8971/\u001b[39m\n\u001b[31m- Page Title:·\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]:\u001b[39m\n\u001b[31m  - button \\\"Choose File\\\" [ref=e2]\u001b[39m\n\u001b[31m  - button \\\"Button\\\" [ref=e3]\u001b[39m\n\u001b[31m```\"\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"\u001b[39m\n\u001b[32m```yaml\u001b[39m\n\u001b[32m- generic [active] [ref=e1]:\u001b[39m\n\u001b[32m  - button \\\"Choose File\\\" [ref=e2]\u001b[39m\n\u001b[32m  - button \\\"Button\\\" [ref=e3]\u001b[39m\n\u001b[32m```\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// Navigate to http://localhost:8971/\u001b[39m\n\u001b[31mawait page.goto('http://localhost:8971/');\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8971/\u001b[39m\n\u001b[31m- Page Title:·\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]:\u001b[39m\n\u001b[31m  - button \\\"Choose File\\\" [ref=e2]\u001b[39m\n\u001b[31m  - button \\\"Button\\\" [ref=e3]\u001b[39m\n\u001b[31m```\"\u001b[39m\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/files.spec.ts:29:7",
                    "location": {
                      "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/files.spec.ts",
                      "column": 7,
                      "line": 29
                    },
                    "snippet": "  27 |     name: 'browser_navigate',\n  28 |     arguments: { url: server.PREFIX },\n> 29 |   })).toContainTextContent(`\n     |       ^\n  30 | \\`\\`\\`yaml\n  31 | - generic [active] [ref=e1]:\n  32 |   - button \"Choose File\" [ref=e2]"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/files.spec.ts",
                        "column": 7,
                        "line": 29
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"\u001b[39m\n\u001b[32m```yaml\u001b[39m\n\u001b[32m- generic [active] [ref=e1]:\u001b[39m\n\u001b[32m  - button \\\"Choose File\\\" [ref=e2]\u001b[39m\n\u001b[32m  - button \\\"Button\\\" [ref=e3]\u001b[39m\n\u001b[32m```\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// Navigate to http://localhost:8971/\u001b[39m\n\u001b[31mawait page.goto('http://localhost:8971/');\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8971/\u001b[39m\n\u001b[31m- Page Title:·\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]:\u001b[39m\n\u001b[31m  - button \\\"Choose File\\\" [ref=e2]\u001b[39m\n\u001b[31m  - button \\\"Button\\\" [ref=e3]\u001b[39m\n\u001b[31m```\"\u001b[39m\n\n  27 |     name: 'browser_navigate',\n  28 |     arguments: { url: server.PREFIX },\n> 29 |   })).toContainTextContent(`\n     |       ^\n  30 | \\`\\`\\`yaml\n  31 | - generic [active] [ref=e1]:\n  32 |   - button \"Choose File\" [ref=e2]\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/files.spec.ts:29:7"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:26.835Z",
                  "annotations": [],
                  "attachments": [],
                  "errorLocation": {
                    "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/files.spec.ts",
                    "column": 7,
                    "line": 29
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "1de639fdc719e2321283-774ccbca63bf92e0a1de",
          "file": "files.spec.ts",
          "line": 20,
          "column": 1
        },
        {
          "title": "clicking on download link emits download",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 17,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 2812,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "steps": [
                    {
                      "title": "Expect \"poll toContainTextContent\"",
                      "duration": 27
                    }
                  ],
                  "startTime": "2025-07-18T04:04:26.833Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "1de639fdc719e2321283-dc13242f84c46e268647",
          "file": "files.spec.ts",
          "line": 97,
          "column": 1
        },
        {
          "title": "navigating to download link emits download",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 18,
                  "parallelIndex": 4,
                  "status": "passed",
                  "duration": 2325,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:27.413Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "1de639fdc719e2321283-746a15bebd474fc759a0",
          "file": "files.spec.ts",
          "line": 121,
          "column": 1
        }
      ]
    },
    {
      "title": "headed.spec.ts",
      "file": "headed.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "mcpHeadless: false",
          "file": "headed.spec.ts",
          "line": 20,
          "column": 8,
          "specs": [
            {
              "title": "browser",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 15000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chrome",
                  "projectName": "chrome",
                  "results": [
                    {
                      "workerIndex": 19,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 2400,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-18T04:04:27.459Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "67fc5a05cd2b8976104b-9c0c32cfc9f6478bdd4e",
              "file": "headed.spec.ts",
              "line": 24,
              "column": 5
            }
          ]
        },
        {
          "title": "mcpHeadless: true",
          "file": "headed.spec.ts",
          "line": 20,
          "column": 8,
          "specs": [
            {
              "title": "browser",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 15000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chrome",
                  "projectName": "chrome",
                  "results": [
                    {
                      "workerIndex": 20,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 2595,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-18T04:04:28.185Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "67fc5a05cd2b8976104b-83d5459ed6f63b9e722e",
              "file": "headed.spec.ts",
              "line": 24,
              "column": 5
            }
          ]
        }
      ]
    },
    {
      "title": "html.spec.ts",
      "file": "html.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "browser_get_html_content (full page)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 7,
                  "parallelIndex": 5,
                  "status": "passed",
                  "duration": 2699,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:27.893Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "c5f033efa6b6a7d2e3f4-b52fa182d5d82f63a381",
          "file": "html.spec.ts",
          "line": 19,
          "column": 1
        },
        {
          "title": "browser_get_html_content (single locator - single element)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 21,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 2913,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:29.768Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "c5f033efa6b6a7d2e3f4-8691e2b1f02982a1763c",
          "file": "html.spec.ts",
          "line": 56,
          "column": 1
        },
        {
          "title": "browser_get_html_content (single locator - multiple elements)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 17,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 2952,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:29.704Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "c5f033efa6b6a7d2e3f4-81871dd79d69cd3edc83",
          "file": "html.spec.ts",
          "line": 96,
          "column": 1
        },
        {
          "title": "browser_get_html_content (multiple locators)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 18,
                  "parallelIndex": 4,
                  "status": "passed",
                  "duration": 3711,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:29.784Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "c5f033efa6b6a7d2e3f4-228b7c8fe5bb94d74947",
          "file": "html.spec.ts",
          "line": 136,
          "column": 1
        },
        {
          "title": "browser_get_html_content (locator - no elements found)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 19,
                  "parallelIndex": 3,
                  "status": "passed",
                  "duration": 2677,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:29.893Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "c5f033efa6b6a7d2e3f4-629a4a0564de887c1641",
          "file": "html.spec.ts",
          "line": 174,
          "column": 1
        },
        {
          "title": "browser_get_outer_html (single locator - single element)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 7,
                  "parallelIndex": 5,
                  "status": "passed",
                  "duration": 3270,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:30.645Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "c5f033efa6b6a7d2e3f4-2d497a1e441e6e975f07",
          "file": "html.spec.ts",
          "line": 201,
          "column": 1
        },
        {
          "title": "browser_get_outer_html (single locator - multiple elements)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 20,
                  "parallelIndex": 2,
                  "status": "passed",
                  "duration": 3208,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:30.808Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "c5f033efa6b6a7d2e3f4-9a75ab8dbd1af1a7a928",
          "file": "html.spec.ts",
          "line": 241,
          "column": 1
        },
        {
          "title": "browser_get_outer_html (multiple locators)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 19,
                  "parallelIndex": 3,
                  "status": "passed",
                  "duration": 3907,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:32.581Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "c5f033efa6b6a7d2e3f4-e54860ec72b354d41ca4",
          "file": "html.spec.ts",
          "line": 281,
          "column": 1
        }
      ]
    },
    {
      "title": "iframes.spec.ts",
      "file": "iframes.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "stitched aria frames",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 21,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 3727,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"\u001b[39m\n\u001b[32m```yaml\u001b[39m\n\u001b[32m- generic [active] [ref=e1]:\u001b[39m\n\u001b[32m  - heading \\\"Hello\\\" [level=1] [ref=e2]\u001b[39m\n\u001b[32m  - iframe [ref=e3]:\u001b[39m\n\u001b[32m    - generic [active] [ref=f1e1]:\u001b[39m\n\u001b[32m      - button \\\"World\\\" [ref=f1e2]\u001b[39m\n\u001b[32m      - main [ref=f1e3]:\u001b[39m\n\u001b[32m        - iframe [ref=f1e4]:\u001b[39m\n\u001b[32m          - paragraph [ref=f2e2]: Nested\u001b[39m\n\u001b[32m```\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// Navigate to data:text/html,<h1>Hello</h1><iframe src=\\\"data:text/html,<button>World</button><main><iframe src='data:text/html,<p>Nested</p>'></iframe></main>\\\"></iframe><iframe src=\\\"data:text/html,<h1>Should be invisible</h1>\\\" style=\\\"display: none;\\\"></iframe>\u001b[39m\n\u001b[31mawait page.goto('data:text/html,<h1>Hello</h1><iframe src=\\\"data:text/html,<button>World</button><main><iframe src='data:text/html,<p>Nested</p>'></iframe></main>\\\"></iframe><iframe src=\\\"data:text/html,<h1>Should be invisible</h1>\\\" style=\\\"display: none;\\\"></iframe>');\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: data:text/html,<h1>Hello</h1><iframe src=\\\"data:text/html,<button>World</button><main><iframe src='data:text/html,<p>Nested</p>'></iframe></main>\\\"></iframe><iframe src=\\\"data:text/html,<h1>Should be invisible</h1>\\\" style=\\\"display: none;\\\"></iframe>\u001b[39m\n\u001b[31m- Page Title:·\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]:\u001b[39m\n\u001b[31m  - heading \\\"Hello\\\" [level=1] [ref=e2]\u001b[39m\n\u001b[31m  - iframe [ref=e3]:\u001b[39m\n\u001b[31m    - generic [ref=f1e1]:\u001b[39m\n\u001b[31m      - button \\\"World\\\" [ref=f1e2]\u001b[39m\n\u001b[31m      - main [ref=f1e3]:\u001b[39m\n\u001b[31m        - iframe [ref=f1e4]:\u001b[39m\n\u001b[31m          - paragraph [ref=f2e2]: Nested\u001b[39m\n\u001b[31m```\"\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"\u001b[39m\n\u001b[32m```yaml\u001b[39m\n\u001b[32m- generic [active] [ref=e1]:\u001b[39m\n\u001b[32m  - heading \\\"Hello\\\" [level=1] [ref=e2]\u001b[39m\n\u001b[32m  - iframe [ref=e3]:\u001b[39m\n\u001b[32m    - generic [active] [ref=f1e1]:\u001b[39m\n\u001b[32m      - button \\\"World\\\" [ref=f1e2]\u001b[39m\n\u001b[32m      - main [ref=f1e3]:\u001b[39m\n\u001b[32m        - iframe [ref=f1e4]:\u001b[39m\n\u001b[32m          - paragraph [ref=f2e2]: Nested\u001b[39m\n\u001b[32m```\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// Navigate to data:text/html,<h1>Hello</h1><iframe src=\\\"data:text/html,<button>World</button><main><iframe src='data:text/html,<p>Nested</p>'></iframe></main>\\\"></iframe><iframe src=\\\"data:text/html,<h1>Should be invisible</h1>\\\" style=\\\"display: none;\\\"></iframe>\u001b[39m\n\u001b[31mawait page.goto('data:text/html,<h1>Hello</h1><iframe src=\\\"data:text/html,<button>World</button><main><iframe src='data:text/html,<p>Nested</p>'></iframe></main>\\\"></iframe><iframe src=\\\"data:text/html,<h1>Should be invisible</h1>\\\" style=\\\"display: none;\\\"></iframe>');\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: data:text/html,<h1>Hello</h1><iframe src=\\\"data:text/html,<button>World</button><main><iframe src='data:text/html,<p>Nested</p>'></iframe></main>\\\"></iframe><iframe src=\\\"data:text/html,<h1>Should be invisible</h1>\\\" style=\\\"display: none;\\\"></iframe>\u001b[39m\n\u001b[31m- Page Title:·\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]:\u001b[39m\n\u001b[31m  - heading \\\"Hello\\\" [level=1] [ref=e2]\u001b[39m\n\u001b[31m  - iframe [ref=e3]:\u001b[39m\n\u001b[31m    - generic [ref=f1e1]:\u001b[39m\n\u001b[31m      - button \\\"World\\\" [ref=f1e2]\u001b[39m\n\u001b[31m      - main [ref=f1e3]:\u001b[39m\n\u001b[31m        - iframe [ref=f1e4]:\u001b[39m\n\u001b[31m          - paragraph [ref=f2e2]: Nested\u001b[39m\n\u001b[31m```\"\u001b[39m\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/iframes.spec.ts:25:7",
                    "location": {
                      "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/iframes.spec.ts",
                      "column": 7,
                      "line": 25
                    },
                    "snippet": "  23 |       url: `data:text/html,<h1>Hello</h1><iframe src=\"data:text/html,<button>World</button><main><iframe src='data:text/html,<p>Nested</p>'></iframe></main>\"></iframe><iframe src=\"data:text/html,<h1>Should be invisible</h1>\" style=\"display: none;\"></iframe>`,\n  24 |     },\n> 25 |   })).toContainTextContent(`\n     |       ^\n  26 | \\`\\`\\`yaml\n  27 | - generic [active] [ref=e1]:\n  28 |   - heading \"Hello\" [level=1] [ref=e2]"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/iframes.spec.ts",
                        "column": 7,
                        "line": 25
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"\u001b[39m\n\u001b[32m```yaml\u001b[39m\n\u001b[32m- generic [active] [ref=e1]:\u001b[39m\n\u001b[32m  - heading \\\"Hello\\\" [level=1] [ref=e2]\u001b[39m\n\u001b[32m  - iframe [ref=e3]:\u001b[39m\n\u001b[32m    - generic [active] [ref=f1e1]:\u001b[39m\n\u001b[32m      - button \\\"World\\\" [ref=f1e2]\u001b[39m\n\u001b[32m      - main [ref=f1e3]:\u001b[39m\n\u001b[32m        - iframe [ref=f1e4]:\u001b[39m\n\u001b[32m          - paragraph [ref=f2e2]: Nested\u001b[39m\n\u001b[32m```\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// Navigate to data:text/html,<h1>Hello</h1><iframe src=\\\"data:text/html,<button>World</button><main><iframe src='data:text/html,<p>Nested</p>'></iframe></main>\\\"></iframe><iframe src=\\\"data:text/html,<h1>Should be invisible</h1>\\\" style=\\\"display: none;\\\"></iframe>\u001b[39m\n\u001b[31mawait page.goto('data:text/html,<h1>Hello</h1><iframe src=\\\"data:text/html,<button>World</button><main><iframe src='data:text/html,<p>Nested</p>'></iframe></main>\\\"></iframe><iframe src=\\\"data:text/html,<h1>Should be invisible</h1>\\\" style=\\\"display: none;\\\"></iframe>');\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: data:text/html,<h1>Hello</h1><iframe src=\\\"data:text/html,<button>World</button><main><iframe src='data:text/html,<p>Nested</p>'></iframe></main>\\\"></iframe><iframe src=\\\"data:text/html,<h1>Should be invisible</h1>\\\" style=\\\"display: none;\\\"></iframe>\u001b[39m\n\u001b[31m- Page Title:·\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]:\u001b[39m\n\u001b[31m  - heading \\\"Hello\\\" [level=1] [ref=e2]\u001b[39m\n\u001b[31m  - iframe [ref=e3]:\u001b[39m\n\u001b[31m    - generic [ref=f1e1]:\u001b[39m\n\u001b[31m      - button \\\"World\\\" [ref=f1e2]\u001b[39m\n\u001b[31m      - main [ref=f1e3]:\u001b[39m\n\u001b[31m        - iframe [ref=f1e4]:\u001b[39m\n\u001b[31m          - paragraph [ref=f2e2]: Nested\u001b[39m\n\u001b[31m```\"\u001b[39m\n\n  23 |       url: `data:text/html,<h1>Hello</h1><iframe src=\"data:text/html,<button>World</button><main><iframe src='data:text/html,<p>Nested</p>'></iframe></main>\"></iframe><iframe src=\"data:text/html,<h1>Should be invisible</h1>\" style=\"display: none;\"></iframe>`,\n  24 |     },\n> 25 |   })).toContainTextContent(`\n     |       ^\n  26 | \\`\\`\\`yaml\n  27 | - generic [active] [ref=e1]:\n  28 |   - heading \"Hello\" [level=1] [ref=e2]\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/iframes.spec.ts:25:7"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:32.804Z",
                  "annotations": [],
                  "attachments": [],
                  "errorLocation": {
                    "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/iframes.spec.ts",
                    "column": 7,
                    "line": 25
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "b015d4919dc80cf5ca62-3b5b0da6159afc148057",
          "file": "iframes.spec.ts",
          "line": 19,
          "column": 1
        }
      ]
    },
    {
      "title": "install.spec.ts",
      "file": "install.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "browser_install",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [
                {
                  "type": "skip",
                  "description": "Test only chromium"
                }
              ],
              "expectedStatus": "skipped",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 17,
                  "parallelIndex": 1,
                  "status": "skipped",
                  "duration": 1791,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:32.862Z",
                  "annotations": [
                    {
                      "type": "skip",
                      "description": "Test only chromium"
                    }
                  ],
                  "attachments": []
                }
              ],
              "status": "skipped"
            }
          ],
          "id": "ad152c4ad18ebad5feb4-a91eee3f743c5e5fe29c",
          "file": "install.spec.ts",
          "line": 19,
          "column": 1
        }
      ]
    },
    {
      "title": "launch.spec.ts",
      "file": "launch.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "test reopen browser",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 18,
                  "parallelIndex": 4,
                  "status": "failed",
                  "duration": 6211,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- generic [active] [ref=e1]: Hello, world!\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// Navigate to http://localhost:8979/hello-world\u001b[39m\n\u001b[31mawait page.goto('http://localhost:8979/hello-world');\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8979/hello-world\u001b[39m\n\u001b[31m- Page Title: Title\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]: Hello, world!\u001b[39m\n\u001b[31m```\"\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- generic [active] [ref=e1]: Hello, world!\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// Navigate to http://localhost:8979/hello-world\u001b[39m\n\u001b[31mawait page.goto('http://localhost:8979/hello-world');\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8979/hello-world\u001b[39m\n\u001b[31m- Page Title: Title\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]: Hello, world!\u001b[39m\n\u001b[31m```\"\u001b[39m\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/launch.spec.ts:35:7",
                    "location": {
                      "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/launch.spec.ts",
                      "column": 7,
                      "line": 35
                    },
                    "snippet": "  33 |     name: 'browser_navigate',\n  34 |     arguments: { url: server.HELLO_WORLD },\n> 35 |   })).toContainTextContent(`- generic [active] [ref=e1]: Hello, world!`);\n     |       ^\n  36 |\n  37 |   await client.close();\n  38 |"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/launch.spec.ts",
                        "column": 7,
                        "line": 35
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- generic [active] [ref=e1]: Hello, world!\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// Navigate to http://localhost:8979/hello-world\u001b[39m\n\u001b[31mawait page.goto('http://localhost:8979/hello-world');\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8979/hello-world\u001b[39m\n\u001b[31m- Page Title: Title\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]: Hello, world!\u001b[39m\n\u001b[31m```\"\u001b[39m\n\n  33 |     name: 'browser_navigate',\n  34 |     arguments: { url: server.HELLO_WORLD },\n> 35 |   })).toContainTextContent(`- generic [active] [ref=e1]: Hello, world!`);\n     |       ^\n  36 |\n  37 |   await client.close();\n  38 |\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/launch.spec.ts:35:7"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:33.619Z",
                  "annotations": [],
                  "attachments": [],
                  "errorLocation": {
                    "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/launch.spec.ts",
                    "column": 7,
                    "line": 35
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "dbef296c55402b17a338-a831ae92cadec1c80fc7",
          "file": "launch.spec.ts",
          "line": 21,
          "column": 1
        },
        {
          "title": "executable path",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 7,
                  "parallelIndex": 5,
                  "status": "passed",
                  "duration": 1090,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:33.983Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "dbef296c55402b17a338-748170b0b1e49eee76b0",
          "file": "launch.spec.ts",
          "line": 59,
          "column": 1
        },
        {
          "title": "persistent context",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 20,
                  "parallelIndex": 2,
                  "status": "timedOut",
                  "duration": 15125,
                  "error": {
                    "message": "\u001b[31mTest timeout of 15000ms exceeded.\u001b[39m",
                    "stack": "\u001b[31mTest timeout of 15000ms exceeded.\u001b[39m"
                  },
                  "errors": [
                    {
                      "message": "\u001b[31mTest timeout of 15000ms exceeded.\u001b[39m"
                    },
                    {
                      "location": {
                        "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/fixtures.ts",
                        "column": 19,
                        "line": 109
                      },
                      "message": "McpError: MCP error -32000: Connection closed\n\n   at fixtures.ts:109\n\n  107 |     });\n  108 |\n> 109 |     await client?.close();\n      |                   ^\n  110 |   },\n  111 |\n  112 |   wsEndpoint: async ({ }, use) => {\n    at Client._onclose (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:312:19)\n    at StdioClientTransport._transport.onclose (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:283:12)\n    at ChildProcess.<anonymous> (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/client/stdio.ts:136:23)\n    at StdioClientTransport.close (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/client/stdio.ts:203:27)\n    at Client.close (/Users/a1/Projects/playwright-mcp-advanced/node_modules/@modelcontextprotocol/sdk/src/shared/protocol.ts:481:28)\n    at Object.startClient (/Users/a1/Projects/playwright-mcp-advanced/tests/fixtures.ts:109:19)"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:34.085Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "dbef296c55402b17a338-4a4929e131e299914747",
          "file": "launch.spec.ts",
          "line": 68,
          "column": 1
        },
        {
          "title": "isolated context",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 17,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 4570,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:34.845Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "dbef296c55402b17a338-6be812ffe42458f7eb8d",
          "file": "launch.spec.ts",
          "line": 100,
          "column": 1
        },
        {
          "title": "isolated context with storage state",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 7,
                  "parallelIndex": 5,
                  "status": "passed",
                  "duration": 2710,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:35.079Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "dbef296c55402b17a338-022e645b6a73b242d423",
          "file": "launch.spec.ts",
          "line": 129,
          "column": 1
        }
      ]
    },
    {
      "title": "library.spec.ts",
      "file": "library.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "library can be used from CommonJS",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [
                {
                  "type": "issue",
                  "description": "https://github.com/microsoft/playwright-mcp/issues/456"
                }
              ],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 19,
                  "parallelIndex": 3,
                  "status": "passed",
                  "duration": 304,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:36.548Z",
                  "annotations": [
                    {
                      "type": "issue",
                      "description": "https://github.com/microsoft/playwright-mcp/issues/456"
                    }
                  ],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "ad0ae3d52ea8a2949ca9-b6196c85e421fc417114",
          "file": "library.spec.ts",
          "line": 20,
          "column": 1
        }
      ]
    },
    {
      "title": "network.spec.ts",
      "file": "network.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "browser_network_requests",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 22,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 2609,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "steps": [
                    {
                      "title": "Expect \"poll toHaveTextContent\"",
                      "duration": 17
                    }
                  ],
                  "startTime": "2025-07-18T04:04:37.140Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "5567a9004528a7a67849-98424ac57b0ca9943a2c",
          "file": "network.spec.ts",
          "line": 19,
          "column": 1
        }
      ]
    },
    {
      "title": "pdf.spec.ts",
      "file": "pdf.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "save as pdf unavailable",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 19,
                  "parallelIndex": 3,
                  "status": "passed",
                  "duration": 1539,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:36.862Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "5cd159bb3e06cbdca264-49220970c4bbf2c92edc",
          "file": "pdf.spec.ts",
          "line": 21,
          "column": 1
        },
        {
          "title": "save as pdf",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 7,
                  "parallelIndex": 5,
                  "status": "failed",
                  "duration": 1553,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- generic [active] [ref=e1]: Hello, world!\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// Navigate to http://localhost:8935/hello-world\u001b[39m\n\u001b[31mawait page.goto('http://localhost:8935/hello-world');\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8935/hello-world\u001b[39m\n\u001b[31m- Page Title: Title\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]: Hello, world!\u001b[39m\n\u001b[31m```\"\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- generic [active] [ref=e1]: Hello, world!\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// Navigate to http://localhost:8935/hello-world\u001b[39m\n\u001b[31mawait page.goto('http://localhost:8935/hello-world');\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8935/hello-world\u001b[39m\n\u001b[31m- Page Title: Title\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]: Hello, world!\u001b[39m\n\u001b[31m```\"\u001b[39m\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/pdf.spec.ts:43:7",
                    "location": {
                      "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/pdf.spec.ts",
                      "column": 7,
                      "line": 43
                    },
                    "snippet": "  41 |     name: 'browser_navigate',\n  42 |     arguments: { url: server.HELLO_WORLD },\n> 43 |   })).toContainTextContent(`- generic [active] [ref=e1]: Hello, world!`);\n     |       ^\n  44 |\n  45 |   const response = await client.callTool({\n  46 |     name: 'browser_pdf_save',"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/pdf.spec.ts",
                        "column": 7,
                        "line": 43
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- generic [active] [ref=e1]: Hello, world!\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// Navigate to http://localhost:8935/hello-world\u001b[39m\n\u001b[31mawait page.goto('http://localhost:8935/hello-world');\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8935/hello-world\u001b[39m\n\u001b[31m- Page Title: Title\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]: Hello, world!\u001b[39m\n\u001b[31m```\"\u001b[39m\n\n  41 |     name: 'browser_navigate',\n  42 |     arguments: { url: server.HELLO_WORLD },\n> 43 |   })).toContainTextContent(`- generic [active] [ref=e1]: Hello, world!`);\n     |       ^\n  44 |\n  45 |   const response = await client.callTool({\n  46 |     name: 'browser_pdf_save',\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/pdf.spec.ts:43:7"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:37.805Z",
                  "annotations": [],
                  "attachments": [],
                  "errorLocation": {
                    "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/pdf.spec.ts",
                    "column": 7,
                    "line": 43
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "5cd159bb3e06cbdca264-4cc3a3ce2a34599d3ef1",
          "file": "pdf.spec.ts",
          "line": 33,
          "column": 1
        },
        {
          "title": "save as pdf (filename: output.pdf)",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 19,
                  "parallelIndex": 3,
                  "status": "failed",
                  "duration": 1438,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- generic [active] [ref=e1]: Hello, world!\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// Navigate to http://localhost:8983/hello-world\u001b[39m\n\u001b[31mawait page.goto('http://localhost:8983/hello-world');\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8983/hello-world\u001b[39m\n\u001b[31m- Page Title: Title\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]: Hello, world!\u001b[39m\n\u001b[31m```\"\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- generic [active] [ref=e1]: Hello, world!\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// Navigate to http://localhost:8983/hello-world\u001b[39m\n\u001b[31mawait page.goto('http://localhost:8983/hello-world');\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8983/hello-world\u001b[39m\n\u001b[31m- Page Title: Title\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]: Hello, world!\u001b[39m\n\u001b[31m```\"\u001b[39m\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/pdf.spec.ts:61:7",
                    "location": {
                      "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/pdf.spec.ts",
                      "column": 7,
                      "line": 61
                    },
                    "snippet": "  59 |     name: 'browser_navigate',\n  60 |     arguments: { url: server.HELLO_WORLD },\n> 61 |   })).toContainTextContent(`- generic [active] [ref=e1]: Hello, world!`);\n     |       ^\n  62 |\n  63 |   expect(await client.callTool({\n  64 |     name: 'browser_pdf_save',"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/pdf.spec.ts",
                        "column": 7,
                        "line": 61
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"- generic [active] [ref=e1]: Hello, world!\"\u001b[39m\nReceived string:    \u001b[31m\"- Ran Playwright code:\u001b[39m\n\u001b[31m```js\u001b[39m\n\u001b[31m// Navigate to http://localhost:8983/hello-world\u001b[39m\n\u001b[31mawait page.goto('http://localhost:8983/hello-world');\u001b[39m\n\u001b[31m```·\u001b[39m\n\u001b[31m- Page URL: http://localhost:8983/hello-world\u001b[39m\n\u001b[31m- Page Title: Title\u001b[39m\n\u001b[31m- Page Snapshot\u001b[39m\n\u001b[31m```yaml\u001b[39m\n\u001b[31m- generic [ref=e1]: Hello, world!\u001b[39m\n\u001b[31m```\"\u001b[39m\n\n  59 |     name: 'browser_navigate',\n  60 |     arguments: { url: server.HELLO_WORLD },\n> 61 |   })).toContainTextContent(`- generic [active] [ref=e1]: Hello, world!`);\n     |       ^\n  62 |\n  63 |   expect(await client.callTool({\n  64 |     name: 'browser_pdf_save',\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/pdf.spec.ts:61:7"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:38.419Z",
                  "annotations": [],
                  "attachments": [],
                  "errorLocation": {
                    "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/pdf.spec.ts",
                    "column": 7,
                    "line": 61
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "5cd159bb3e06cbdca264-b6e13e58adb8b18b0bd2",
          "file": "pdf.spec.ts",
          "line": 51,
          "column": 1
        }
      ]
    },
    {
      "title": "request-blocking.spec.ts",
      "file": "request-blocking.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "default to allow all",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 23,
                  "parallelIndex": 5,
                  "status": "passed",
                  "duration": 1798,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:40.096Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "acd35b62ee3a381e5538-3b25ca0a2748cde644ee",
          "file": "request-blocking.spec.ts",
          "line": 33,
          "column": 1
        },
        {
          "title": "blocked works",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 17,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 1607,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:39.436Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "acd35b62ee3a381e5538-99326b999fd895653bed",
          "file": "request-blocking.spec.ts",
          "line": 39,
          "column": 1
        },
        {
          "title": "allowed works",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 22,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 1321,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:39.777Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "acd35b62ee3a381e5538-14166147bf2e728ead92",
          "file": "request-blocking.spec.ts",
          "line": 47,
          "column": 1
        },
        {
          "title": "blocked takes precedence",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 24,
                  "parallelIndex": 4,
                  "status": "passed",
                  "duration": 2013,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:40.310Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "acd35b62ee3a381e5538-7c86173917210f6b79c7",
          "file": "request-blocking.spec.ts",
          "line": 56,
          "column": 1
        },
        {
          "title": "allowed without blocked blocks all non-explicitly specified origins",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 25,
                  "parallelIndex": 3,
                  "status": "passed",
                  "duration": 2071,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:40.306Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "acd35b62ee3a381e5538-4ba4edd82d7c9a102520",
          "file": "request-blocking.spec.ts",
          "line": 67,
          "column": 1
        },
        {
          "title": "blocked without allowed allows non-explicitly specified origins",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 17,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 2414,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:41.057Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "acd35b62ee3a381e5538-401947eda18f372e8981",
          "file": "request-blocking.spec.ts",
          "line": 75,
          "column": 1
        }
      ]
    },
    {
      "title": "screenshot.spec.ts",
      "file": "screenshot.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "browser_take_screenshot (viewport)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 22,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 2507,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:41.114Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "e6e0a5cfb1a0a8a16337-8178991247753f08602c",
          "file": "screenshot.spec.ts",
          "line": 21,
          "column": 1
        },
        {
          "title": "browser_take_screenshot (element)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 23,
                  "parallelIndex": 5,
                  "status": "passed",
                  "duration": 3070,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:41.959Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "e6e0a5cfb1a0a8a16337-a60ce64f8b400b9dd8a6",
          "file": "screenshot.spec.ts",
          "line": 47,
          "column": 1
        },
        {
          "title": "--output-dir should work",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 24,
                  "parallelIndex": 4,
                  "status": "passed",
                  "duration": 2493,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:42.408Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "e6e0a5cfb1a0a8a16337-be9ed9cc7c808eaef1c4",
          "file": "screenshot.spec.ts",
          "line": 77,
          "column": 1
        },
        {
          "title": "browser_take_screenshot (raw: undefined)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 25,
                  "parallelIndex": 3,
                  "status": "passed",
                  "duration": 2455,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:42.431Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "e6e0a5cfb1a0a8a16337-48ed61d20c8cb5e993d4",
          "file": "screenshot.spec.ts",
          "line": 98,
          "column": 3
        },
        {
          "title": "browser_take_screenshot (raw: true)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 17,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 2011,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:43.498Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "e6e0a5cfb1a0a8a16337-c87d447b4058e050cef1",
          "file": "screenshot.spec.ts",
          "line": 98,
          "column": 3
        },
        {
          "title": "browser_take_screenshot (filename: \"output.jpeg\")",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 22,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 1992,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:43.628Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "e6e0a5cfb1a0a8a16337-5dba723bd3521260127d",
          "file": "screenshot.spec.ts",
          "line": 139,
          "column": 1
        },
        {
          "title": "browser_take_screenshot (imageResponses=omit)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 24,
                  "parallelIndex": 4,
                  "status": "passed",
                  "duration": 2365,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:44.922Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "e6e0a5cfb1a0a8a16337-cb1a95748594f3935e8c",
          "file": "screenshot.spec.ts",
          "line": 175,
          "column": 1
        },
        {
          "title": "browser_take_screenshot (cursor)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 25,
                  "parallelIndex": 3,
                  "status": "passed",
                  "duration": 2360,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:44.948Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "e6e0a5cfb1a0a8a16337-2c86ef63256fadf279ea",
          "file": "screenshot.spec.ts",
          "line": 205,
          "column": 1
        },
        {
          "title": "browser_take_screenshot (fullPage)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 23,
                  "parallelIndex": 5,
                  "status": "passed",
                  "duration": 2108,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:45.162Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "e6e0a5cfb1a0a8a16337-d071552d88399e12d9fa",
          "file": "screenshot.spec.ts",
          "line": 239,
          "column": 1
        },
        {
          "title": "browser_take_screenshot (locator - single element)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 17,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 2076,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:45.524Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "e6e0a5cfb1a0a8a16337-e178199c53cf3eff76e1",
          "file": "screenshot.spec.ts",
          "line": 278,
          "column": 1
        },
        {
          "title": "browser_take_screenshot (locator - multiple elements)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 22,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 2371,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:45.633Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "e6e0a5cfb1a0a8a16337-8289ce6c1fb7eb3c0ef6",
          "file": "screenshot.spec.ts",
          "line": 313,
          "column": 1
        },
        {
          "title": "browser_take_screenshot (locator - no elements found)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 23,
                  "parallelIndex": 5,
                  "status": "passed",
                  "duration": 2449,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:47.304Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "e6e0a5cfb1a0a8a16337-30cd58eb60182e805b5b",
          "file": "screenshot.spec.ts",
          "line": 362,
          "column": 1
        }
      ]
    },
    {
      "title": "snapshot.spec.ts",
      "file": "snapshot.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "browser_element_snapshot (single locator - single element)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 25,
                  "parallelIndex": 3,
                  "status": "passed",
                  "duration": 2215,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:47.412Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "af31d459238a8d91b51a-af4d220e52f6cb1a4f69",
          "file": "snapshot.spec.ts",
          "line": 19,
          "column": 1
        },
        {
          "title": "browser_element_snapshot (single locator - multiple elements)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 24,
                  "parallelIndex": 4,
                  "status": "passed",
                  "duration": 2326,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:47.411Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "af31d459238a8d91b51a-68d29cdde7a7f5d49d5a",
          "file": "snapshot.spec.ts",
          "line": 63,
          "column": 1
        },
        {
          "title": "browser_element_snapshot (multiple locators)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 17,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 7873,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:47.641Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "af31d459238a8d91b51a-794b0e54e66563d641d1",
          "file": "snapshot.spec.ts",
          "line": 104,
          "column": 1
        },
        {
          "title": "browser_element_snapshot (locator - no elements found)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 22,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 2142,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:48.030Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "af31d459238a8d91b51a-a9a96eecbb1dfbfcf153",
          "file": "snapshot.spec.ts",
          "line": 142,
          "column": 1
        },
        {
          "title": "browser_element_snapshot (hidden element)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 26,
                  "parallelIndex": 2,
                  "status": "passed",
                  "duration": 1591,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:50.194Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "af31d459238a8d91b51a-30c9a2080e21484063c2",
          "file": "snapshot.spec.ts",
          "line": 167,
          "column": 1
        },
        {
          "title": "browser_element_snapshot (complex nested elements)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 25,
                  "parallelIndex": 3,
                  "status": "passed",
                  "duration": 1522,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:49.679Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "af31d459238a8d91b51a-8126d12c2c2f628f0137",
          "file": "snapshot.spec.ts",
          "line": 200,
          "column": 1
        }
      ]
    },
    {
      "title": "sse.spec.ts",
      "file": "sse.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "sse transport",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 24,
                  "parallelIndex": 4,
                  "status": "passed",
                  "duration": 745,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:49.808Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "10e3428b72c6b6a84968-d6b263959fa9483db911",
          "file": "sse.spec.ts",
          "line": 69,
          "column": 1
        },
        {
          "title": "sse transport (config)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 23,
                  "parallelIndex": 5,
                  "status": "passed",
                  "duration": 761,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:49.814Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "10e3428b72c6b6a84968-bab100f8adee99521705",
          "file": "sse.spec.ts",
          "line": 77,
          "column": 1
        },
        {
          "title": "sse transport browser lifecycle (isolated)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 22,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 2856,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "steps": [
                    {
                      "title": "Expect \"toPass\"",
                      "duration": 115
                    }
                  ],
                  "startTime": "2025-07-18T04:04:50.250Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "10e3428b72c6b6a84968-3991cf64b18db329d03b",
          "file": "sse.spec.ts",
          "line": 93,
          "column": 1
        },
        {
          "title": "sse transport browser lifecycle (isolated, multiclient)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 24,
                  "parallelIndex": 4,
                  "status": "passed",
                  "duration": 3480,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "steps": [
                    {
                      "title": "Expect \"toPass\"",
                      "duration": 196
                    }
                  ],
                  "startTime": "2025-07-18T04:04:50.559Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "10e3428b72c6b6a84968-a12c0696ce457e0f7930",
          "file": "sse.spec.ts",
          "line": 130,
          "column": 1
        },
        {
          "title": "sse transport browser lifecycle (persistent)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 23,
                  "parallelIndex": 5,
                  "status": "passed",
                  "duration": 3228,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "steps": [
                    {
                      "title": "Expect \"toPass\"",
                      "duration": 127
                    }
                  ],
                  "startTime": "2025-07-18T04:04:50.590Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "10e3428b72c6b6a84968-fdd5f3baf74595072ad0",
          "file": "sse.spec.ts",
          "line": 177,
          "column": 1
        },
        {
          "title": "sse transport browser lifecycle (persistent, multiclient)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 25,
                  "parallelIndex": 3,
                  "status": "passed",
                  "duration": 9288,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:51.349Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "10e3428b72c6b6a84968-5af631dba4c8cd29b4af",
          "file": "sse.spec.ts",
          "line": 214,
          "column": 1
        },
        {
          "title": "streamable http transport",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 26,
                  "parallelIndex": 2,
                  "status": "passed",
                  "duration": 2015,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:51.819Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "10e3428b72c6b6a84968-5282a1cc6d587a3d4e83",
          "file": "sse.spec.ts",
          "line": 239,
          "column": 1
        }
      ]
    },
    {
      "title": "tabs.spec.ts",
      "file": "tabs.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "list initial tabs",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 22,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 1923,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:53.202Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "58bda22211c26f1298af-af4a78bfc9b217bc8b30",
          "file": "tabs.spec.ts",
          "line": 30,
          "column": 1
        },
        {
          "title": "list first tab",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 23,
                  "parallelIndex": 5,
                  "status": "passed",
                  "duration": 4404,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:53.881Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "58bda22211c26f1298af-e5e36133c57c549fa851",
          "file": "tabs.spec.ts",
          "line": 37,
          "column": 1
        },
        {
          "title": "create new tab",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 26,
                  "parallelIndex": 2,
                  "status": "failed",
                  "duration": 3985,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[33m@@ -10,7 +10,7 @@\u001b[39m\n\u001b[2m  ### Current tab\u001b[22m\n\u001b[2m  - Page URL: data:text/html,<title>Tab one</title><body>Body one</body>\u001b[22m\n\u001b[2m  - Page Title: Tab one\u001b[22m\n\u001b[2m  - Page Snapshot\u001b[22m\n\u001b[2m  ```yaml\u001b[22m\n\u001b[32m- - generic\u001b[7m [active]\u001b[27m [ref=e1]: Body one\u001b[39m\n\u001b[31m+ - generic [ref=e1]: Body one\u001b[39m\n\u001b[2m  ```\u001b[22m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[33m@@ -10,7 +10,7 @@\u001b[39m\n\u001b[2m  ### Current tab\u001b[22m\n\u001b[2m  - Page URL: data:text/html,<title>Tab one</title><body>Body one</body>\u001b[22m\n\u001b[2m  - Page Title: Tab one\u001b[22m\n\u001b[2m  - Page Snapshot\u001b[22m\n\u001b[2m  ```yaml\u001b[22m\n\u001b[32m- - generic\u001b[7m [active]\u001b[27m [ref=e1]: Body one\u001b[39m\n\u001b[31m+ - generic [ref=e1]: Body one\u001b[39m\n\u001b[2m  ```\u001b[22m\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/tabs.spec.ts:47:58",
                    "location": {
                      "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/tabs.spec.ts",
                      "column": 58,
                      "line": 47
                    },
                    "snippet": "  45 |\n  46 | test('create new tab', async ({ client }) => {\n> 47 |   expect(await createTab(client, 'Tab one', 'Body one')).toHaveTextContent(`\n     |                                                          ^\n  48 | - Ran Playwright code:\n  49 | \\`\\`\\`js\n  50 | // <internal code to open a new tab>"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/tabs.spec.ts",
                        "column": 58,
                        "line": 47
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[33m@@ -10,7 +10,7 @@\u001b[39m\n\u001b[2m  ### Current tab\u001b[22m\n\u001b[2m  - Page URL: data:text/html,<title>Tab one</title><body>Body one</body>\u001b[22m\n\u001b[2m  - Page Title: Tab one\u001b[22m\n\u001b[2m  - Page Snapshot\u001b[22m\n\u001b[2m  ```yaml\u001b[22m\n\u001b[32m- - generic\u001b[7m [active]\u001b[27m [ref=e1]: Body one\u001b[39m\n\u001b[31m+ - generic [ref=e1]: Body one\u001b[39m\n\u001b[2m  ```\u001b[22m\n\n  45 |\n  46 | test('create new tab', async ({ client }) => {\n> 47 |   expect(await createTab(client, 'Tab one', 'Body one')).toHaveTextContent(`\n     |                                                          ^\n  48 | - Ran Playwright code:\n  49 | \\`\\`\\`js\n  50 | // <internal code to open a new tab>\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/tabs.spec.ts:47:58"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:53.918Z",
                  "annotations": [],
                  "attachments": [],
                  "errorLocation": {
                    "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/tabs.spec.ts",
                    "column": 58,
                    "line": 47
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "58bda22211c26f1298af-770d33628b6a8896bdf5",
          "file": "tabs.spec.ts",
          "line": 46,
          "column": 1
        },
        {
          "title": "select tab",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 24,
                  "parallelIndex": 4,
                  "status": "failed",
                  "duration": 3805,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[33m@@ -11,7 +11,7 @@\u001b[39m\n\u001b[2m  ### Current tab\u001b[22m\n\u001b[2m  - Page URL: data:text/html,<title>Tab one</title><body>Body one</body>\u001b[22m\n\u001b[2m  - Page Title: Tab one\u001b[22m\n\u001b[2m  - Page Snapshot\u001b[22m\n\u001b[2m  ```yaml\u001b[22m\n\u001b[32m- - generic\u001b[7m [active]\u001b[27m [ref=e1]: Body one\u001b[39m\n\u001b[31m+ - generic [ref=e1]: Body one\u001b[39m\n\u001b[2m  ```\u001b[22m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[33m@@ -11,7 +11,7 @@\u001b[39m\n\u001b[2m  ### Current tab\u001b[22m\n\u001b[2m  - Page URL: data:text/html,<title>Tab one</title><body>Body one</body>\u001b[22m\n\u001b[2m  - Page Title: Tab one\u001b[22m\n\u001b[2m  - Page Snapshot\u001b[22m\n\u001b[2m  ```yaml\u001b[22m\n\u001b[32m- - generic\u001b[7m [active]\u001b[27m [ref=e1]: Body one\u001b[39m\n\u001b[31m+ - generic [ref=e1]: Body one\u001b[39m\n\u001b[2m  ```\u001b[22m\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/tabs.spec.ts:93:7",
                    "location": {
                      "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/tabs.spec.ts",
                      "column": 7,
                      "line": 93
                    },
                    "snippet": "  91 |       index: 1,\n  92 |     },\n> 93 |   })).toHaveTextContent(`\n     |       ^\n  94 | - Ran Playwright code:\n  95 | \\`\\`\\`js\n  96 | // <internal code to select tab 1>"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/tabs.spec.ts",
                        "column": 7,
                        "line": 93
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[33m@@ -11,7 +11,7 @@\u001b[39m\n\u001b[2m  ### Current tab\u001b[22m\n\u001b[2m  - Page URL: data:text/html,<title>Tab one</title><body>Body one</body>\u001b[22m\n\u001b[2m  - Page Title: Tab one\u001b[22m\n\u001b[2m  - Page Snapshot\u001b[22m\n\u001b[2m  ```yaml\u001b[22m\n\u001b[32m- - generic\u001b[7m [active]\u001b[27m [ref=e1]: Body one\u001b[39m\n\u001b[31m+ - generic [ref=e1]: Body one\u001b[39m\n\u001b[2m  ```\u001b[22m\n\n  91 |       index: 1,\n  92 |     },\n> 93 |   })).toHaveTextContent(`\n     |       ^\n  94 | - Ran Playwright code:\n  95 | \\`\\`\\`js\n  96 | // <internal code to select tab 1>\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/tabs.spec.ts:93:7"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:54.093Z",
                  "annotations": [],
                  "attachments": [],
                  "errorLocation": {
                    "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/tabs.spec.ts",
                    "column": 7,
                    "line": 93
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "58bda22211c26f1298af-08f1194a7f61dd79218b",
          "file": "tabs.spec.ts",
          "line": 85,
          "column": 1
        },
        {
          "title": "close tab",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 22,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 3049,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[33m@@ -10,7 +10,7 @@\u001b[39m\n\u001b[2m  ### Current tab\u001b[22m\n\u001b[2m  - Page URL: data:text/html,<title>Tab one</title><body>Body one</body>\u001b[22m\n\u001b[2m  - Page Title: Tab one\u001b[22m\n\u001b[2m  - Page Snapshot\u001b[22m\n\u001b[2m  ```yaml\u001b[22m\n\u001b[32m- - generic\u001b[7m [active]\u001b[27m [ref=e1]: Body one\u001b[39m\n\u001b[31m+ - generic [ref=e1]: Body one\u001b[39m\n\u001b[2m  ```\u001b[22m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[33m@@ -10,7 +10,7 @@\u001b[39m\n\u001b[2m  ### Current tab\u001b[22m\n\u001b[2m  - Page URL: data:text/html,<title>Tab one</title><body>Body one</body>\u001b[22m\n\u001b[2m  - Page Title: Tab one\u001b[22m\n\u001b[2m  - Page Snapshot\u001b[22m\n\u001b[2m  ```yaml\u001b[22m\n\u001b[32m- - generic\u001b[7m [active]\u001b[27m [ref=e1]: Body one\u001b[39m\n\u001b[31m+ - generic [ref=e1]: Body one\u001b[39m\n\u001b[2m  ```\u001b[22m\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/tabs.spec.ts:121:7",
                    "location": {
                      "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/tabs.spec.ts",
                      "column": 7,
                      "line": 121
                    },
                    "snippet": "  119 |       index: 2,\n  120 |     },\n> 121 |   })).toHaveTextContent(`\n      |       ^\n  122 | - Ran Playwright code:\n  123 | \\`\\`\\`js\n  124 | // <internal code to close tab 2>"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/tabs.spec.ts",
                        "column": 7,
                        "line": 121
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 1\u001b[39m\n\n\u001b[33m@@ -10,7 +10,7 @@\u001b[39m\n\u001b[2m  ### Current tab\u001b[22m\n\u001b[2m  - Page URL: data:text/html,<title>Tab one</title><body>Body one</body>\u001b[22m\n\u001b[2m  - Page Title: Tab one\u001b[22m\n\u001b[2m  - Page Snapshot\u001b[22m\n\u001b[2m  ```yaml\u001b[22m\n\u001b[32m- - generic\u001b[7m [active]\u001b[27m [ref=e1]: Body one\u001b[39m\n\u001b[31m+ - generic [ref=e1]: Body one\u001b[39m\n\u001b[2m  ```\u001b[22m\n\n  119 |       index: 2,\n  120 |     },\n> 121 |   })).toHaveTextContent(`\n      |       ^\n  122 | - Ran Playwright code:\n  123 | \\`\\`\\`js\n  124 | // <internal code to close tab 2>\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/tabs.spec.ts:121:7"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:55.134Z",
                  "annotations": [],
                  "attachments": [],
                  "errorLocation": {
                    "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/tabs.spec.ts",
                    "column": 7,
                    "line": 121
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "58bda22211c26f1298af-660c1b5d39cda0e4d910",
          "file": "tabs.spec.ts",
          "line": 113,
          "column": 1
        },
        {
          "title": "reuse first tab when navigating",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 17,
                  "parallelIndex": 1,
                  "status": "passed",
                  "duration": 6251,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:55.558Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "58bda22211c26f1298af-0836fbe8324b05b3f544",
          "file": "tabs.spec.ts",
          "line": 140,
          "column": 1
        }
      ]
    },
    {
      "title": "trace.spec.ts",
      "file": "trace.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "check that trace is saved",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 27,
                  "parallelIndex": 4,
                  "status": "passed",
                  "duration": 1331,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:58.428Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "e3923cdec76100746450-236b404d17b6c3ca444d",
          "file": "trace.spec.ts",
          "line": 22,
          "column": 1
        }
      ]
    },
    {
      "title": "vision.spec.ts",
      "file": "vision.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "browser_screen_capture (viewport)",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 28,
                  "parallelIndex": 2,
                  "status": "failed",
                  "duration": 1203,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 6\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"content\": Array [\u001b[22m\n\u001b[2m      Object {\u001b[22m\n\u001b[32m-       \"data\": Any<String>,\u001b[39m\n\u001b[32m-       \"mimeType\": \"image/jpeg\",\u001b[39m\n\u001b[32m-       \"type\": \"image\",\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     Object {\u001b[39m\n\u001b[32m-       \"text\": StringContaining \"- Ran Playwright code:\",\u001b[39m\n\u001b[31m+       \"text\": \"Tool \\\"browser_screen_capture\\\" not found\",\u001b[39m\n\u001b[2m        \"type\": \"text\",\u001b[22m\n\u001b[2m      },\u001b[22m\n\u001b[2m    ],\u001b[22m\n\u001b[31m+   \"isError\": true,\u001b[39m\n\u001b[2m  }\u001b[22m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 6\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"content\": Array [\u001b[22m\n\u001b[2m      Object {\u001b[22m\n\u001b[32m-       \"data\": Any<String>,\u001b[39m\n\u001b[32m-       \"mimeType\": \"image/jpeg\",\u001b[39m\n\u001b[32m-       \"type\": \"image\",\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     Object {\u001b[39m\n\u001b[32m-       \"text\": StringContaining \"- Ran Playwright code:\",\u001b[39m\n\u001b[31m+       \"text\": \"Tool \\\"browser_screen_capture\\\" not found\",\u001b[39m\n\u001b[2m        \"type\": \"text\",\u001b[22m\n\u001b[2m      },\u001b[22m\n\u001b[2m    ],\u001b[22m\n\u001b[31m+   \"isError\": true,\u001b[39m\n\u001b[2m  }\u001b[22m\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts:27:7",
                    "location": {
                      "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts",
                      "column": 7,
                      "line": 27
                    },
                    "snippet": "  25 |   expect(await visionClient.callTool({\n  26 |     name: 'browser_screen_capture',\n> 27 |   })).toEqual({\n     |       ^\n  28 |     content: [\n  29 |       {\n  30 |         data: expect.any(String),"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts",
                        "column": 7,
                        "line": 27
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 6\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"content\": Array [\u001b[22m\n\u001b[2m      Object {\u001b[22m\n\u001b[32m-       \"data\": Any<String>,\u001b[39m\n\u001b[32m-       \"mimeType\": \"image/jpeg\",\u001b[39m\n\u001b[32m-       \"type\": \"image\",\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     Object {\u001b[39m\n\u001b[32m-       \"text\": StringContaining \"- Ran Playwright code:\",\u001b[39m\n\u001b[31m+       \"text\": \"Tool \\\"browser_screen_capture\\\" not found\",\u001b[39m\n\u001b[2m        \"type\": \"text\",\u001b[22m\n\u001b[2m      },\u001b[22m\n\u001b[2m    ],\u001b[22m\n\u001b[31m+   \"isError\": true,\u001b[39m\n\u001b[2m  }\u001b[22m\n\n  25 |   expect(await visionClient.callTool({\n  26 |     name: 'browser_screen_capture',\n> 27 |   })).toEqual({\n     |       ^\n  28 |     content: [\n  29 |       {\n  30 |         data: expect.any(String),\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts:27:7"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:58.440Z",
                  "annotations": [],
                  "attachments": [],
                  "errorLocation": {
                    "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts",
                    "column": 7,
                    "line": 27
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "25472900828a21a5e34e-b2198b177b0ec1ab29af",
          "file": "vision.spec.ts",
          "line": 19,
          "column": 1
        },
        {
          "title": "browser_screen_capture (fullPage)",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 29,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 1523,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 6\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"content\": Array [\u001b[22m\n\u001b[2m      Object {\u001b[22m\n\u001b[32m-       \"data\": Any<String>,\u001b[39m\n\u001b[32m-       \"mimeType\": \"image/jpeg\",\u001b[39m\n\u001b[32m-       \"type\": \"image\",\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     Object {\u001b[39m\n\u001b[32m-       \"text\": StringContaining \"- Ran Playwright code:\",\u001b[39m\n\u001b[31m+       \"text\": \"Tool \\\"browser_screen_capture\\\" not found\",\u001b[39m\n\u001b[2m        \"type\": \"text\",\u001b[22m\n\u001b[2m      },\u001b[22m\n\u001b[2m    ],\u001b[22m\n\u001b[31m+   \"isError\": true,\u001b[39m\n\u001b[2m  }\u001b[22m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 6\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"content\": Array [\u001b[22m\n\u001b[2m      Object {\u001b[22m\n\u001b[32m-       \"data\": Any<String>,\u001b[39m\n\u001b[32m-       \"mimeType\": \"image/jpeg\",\u001b[39m\n\u001b[32m-       \"type\": \"image\",\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     Object {\u001b[39m\n\u001b[32m-       \"text\": StringContaining \"- Ran Playwright code:\",\u001b[39m\n\u001b[31m+       \"text\": \"Tool \\\"browser_screen_capture\\\" not found\",\u001b[39m\n\u001b[2m        \"type\": \"text\",\u001b[22m\n\u001b[2m      },\u001b[22m\n\u001b[2m    ],\u001b[22m\n\u001b[31m+   \"isError\": true,\u001b[39m\n\u001b[2m  }\u001b[22m\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts:62:7",
                    "location": {
                      "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts",
                      "column": 7,
                      "line": 62
                    },
                    "snippet": "  60 |     name: 'browser_screen_capture',\n  61 |     arguments: { fullPage: true },\n> 62 |   })).toEqual({\n     |       ^\n  63 |     content: [\n  64 |       {\n  65 |         data: expect.any(String),"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts",
                        "column": 7,
                        "line": 62
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 6\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"content\": Array [\u001b[22m\n\u001b[2m      Object {\u001b[22m\n\u001b[32m-       \"data\": Any<String>,\u001b[39m\n\u001b[32m-       \"mimeType\": \"image/jpeg\",\u001b[39m\n\u001b[32m-       \"type\": \"image\",\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     Object {\u001b[39m\n\u001b[32m-       \"text\": StringContaining \"- Ran Playwright code:\",\u001b[39m\n\u001b[31m+       \"text\": \"Tool \\\"browser_screen_capture\\\" not found\",\u001b[39m\n\u001b[2m        \"type\": \"text\",\u001b[22m\n\u001b[2m      },\u001b[22m\n\u001b[2m    ],\u001b[22m\n\u001b[31m+   \"isError\": true,\u001b[39m\n\u001b[2m  }\u001b[22m\n\n  60 |     name: 'browser_screen_capture',\n  61 |     arguments: { fullPage: true },\n> 62 |   })).toEqual({\n     |       ^\n  63 |     content: [\n  64 |       {\n  65 |         data: expect.any(String),\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts:62:7"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:58.638Z",
                  "annotations": [],
                  "attachments": [],
                  "errorLocation": {
                    "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts",
                    "column": 7,
                    "line": 62
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "25472900828a21a5e34e-cce147e2635bc59155fb",
          "file": "vision.spec.ts",
          "line": 42,
          "column": 1
        },
        {
          "title": "browser_screen_capture (single locator - single element)",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 23,
                  "parallelIndex": 5,
                  "status": "failed",
                  "duration": 1296,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 6\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"content\": Array [\u001b[22m\n\u001b[2m      Object {\u001b[22m\n\u001b[32m-       \"data\": Any<String>,\u001b[39m\n\u001b[32m-       \"mimeType\": \"image/jpeg\",\u001b[39m\n\u001b[32m-       \"type\": \"image\",\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     Object {\u001b[39m\n\u001b[32m-       \"text\": StringContaining \"- Ran Playwright code:\",\u001b[39m\n\u001b[31m+       \"text\": \"Tool \\\"browser_screen_capture\\\" not found\",\u001b[39m\n\u001b[2m        \"type\": \"text\",\u001b[22m\n\u001b[2m      },\u001b[22m\n\u001b[2m    ],\u001b[22m\n\u001b[31m+   \"isError\": true,\u001b[39m\n\u001b[2m  }\u001b[22m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 6\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"content\": Array [\u001b[22m\n\u001b[2m      Object {\u001b[22m\n\u001b[32m-       \"data\": Any<String>,\u001b[39m\n\u001b[32m-       \"mimeType\": \"image/jpeg\",\u001b[39m\n\u001b[32m-       \"type\": \"image\",\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     Object {\u001b[39m\n\u001b[32m-       \"text\": StringContaining \"- Ran Playwright code:\",\u001b[39m\n\u001b[31m+       \"text\": \"Tool \\\"browser_screen_capture\\\" not found\",\u001b[39m\n\u001b[2m        \"type\": \"text\",\u001b[22m\n\u001b[2m      },\u001b[22m\n\u001b[2m    ],\u001b[22m\n\u001b[31m+   \"isError\": true,\u001b[39m\n\u001b[2m  }\u001b[22m\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts:93:7",
                    "location": {
                      "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts",
                      "column": 7,
                      "line": 93
                    },
                    "snippet": "  91 |     name: 'browser_screen_capture',\n  92 |     arguments: { locator: '#test-btn' },\n> 93 |   })).toEqual({\n     |       ^\n  94 |     content: [\n  95 |       {\n  96 |         data: expect.any(String),"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts",
                        "column": 7,
                        "line": 93
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 6\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"content\": Array [\u001b[22m\n\u001b[2m      Object {\u001b[22m\n\u001b[32m-       \"data\": Any<String>,\u001b[39m\n\u001b[32m-       \"mimeType\": \"image/jpeg\",\u001b[39m\n\u001b[32m-       \"type\": \"image\",\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     Object {\u001b[39m\n\u001b[32m-       \"text\": StringContaining \"- Ran Playwright code:\",\u001b[39m\n\u001b[31m+       \"text\": \"Tool \\\"browser_screen_capture\\\" not found\",\u001b[39m\n\u001b[2m        \"type\": \"text\",\u001b[22m\n\u001b[2m      },\u001b[22m\n\u001b[2m    ],\u001b[22m\n\u001b[31m+   \"isError\": true,\u001b[39m\n\u001b[2m  }\u001b[22m\n\n  91 |     name: 'browser_screen_capture',\n  92 |     arguments: { locator: '#test-btn' },\n> 93 |   })).toEqual({\n     |       ^\n  94 |     content: [\n  95 |       {\n  96 |         data: expect.any(String),\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts:93:7"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:58.326Z",
                  "annotations": [],
                  "attachments": [],
                  "errorLocation": {
                    "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts",
                    "column": 7,
                    "line": 93
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "25472900828a21a5e34e-f1a06e7c525b5d31da40",
          "file": "vision.spec.ts",
          "line": 77,
          "column": 1
        },
        {
          "title": "browser_screen_capture (single locator - multiple elements)",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 30,
                  "parallelIndex": 5,
                  "status": "failed",
                  "duration": 1460,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 16\u001b[39m\n\u001b[31m+ Received  +  2\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"content\": Array [\u001b[22m\n\u001b[2m      Object {\u001b[22m\n\u001b[32m-       \"data\": Any<String>,\u001b[39m\n\u001b[32m-       \"mimeType\": \"image/jpeg\",\u001b[39m\n\u001b[32m-       \"type\": \"image\",\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     Object {\u001b[39m\n\u001b[32m-       \"data\": Any<String>,\u001b[39m\n\u001b[32m-       \"mimeType\": \"image/jpeg\",\u001b[39m\n\u001b[32m-       \"type\": \"image\",\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     Object {\u001b[39m\n\u001b[32m-       \"data\": Any<String>,\u001b[39m\n\u001b[32m-       \"mimeType\": \"image/jpeg\",\u001b[39m\n\u001b[32m-       \"type\": \"image\",\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     Object {\u001b[39m\n\u001b[32m-       \"text\": StringContaining \"- Ran Playwright code:\",\u001b[39m\n\u001b[31m+       \"text\": \"Tool \\\"browser_screen_capture\\\" not found\",\u001b[39m\n\u001b[2m        \"type\": \"text\",\u001b[22m\n\u001b[2m      },\u001b[22m\n\u001b[2m    ],\u001b[22m\n\u001b[31m+   \"isError\": true,\u001b[39m\n\u001b[2m  }\u001b[22m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 16\u001b[39m\n\u001b[31m+ Received  +  2\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"content\": Array [\u001b[22m\n\u001b[2m      Object {\u001b[22m\n\u001b[32m-       \"data\": Any<String>,\u001b[39m\n\u001b[32m-       \"mimeType\": \"image/jpeg\",\u001b[39m\n\u001b[32m-       \"type\": \"image\",\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     Object {\u001b[39m\n\u001b[32m-       \"data\": Any<String>,\u001b[39m\n\u001b[32m-       \"mimeType\": \"image/jpeg\",\u001b[39m\n\u001b[32m-       \"type\": \"image\",\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     Object {\u001b[39m\n\u001b[32m-       \"data\": Any<String>,\u001b[39m\n\u001b[32m-       \"mimeType\": \"image/jpeg\",\u001b[39m\n\u001b[32m-       \"type\": \"image\",\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     Object {\u001b[39m\n\u001b[32m-       \"text\": StringContaining \"- Ran Playwright code:\",\u001b[39m\n\u001b[31m+       \"text\": \"Tool \\\"browser_screen_capture\\\" not found\",\u001b[39m\n\u001b[2m        \"type\": \"text\",\u001b[22m\n\u001b[2m      },\u001b[22m\n\u001b[2m    ],\u001b[22m\n\u001b[31m+   \"isError\": true,\u001b[39m\n\u001b[2m  }\u001b[22m\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts:128:18",
                    "location": {
                      "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts",
                      "column": 18,
                      "line": 128
                    },
                    "snippet": "  126 |   });\n  127 |\n> 128 |   expect(result).toEqual({\n      |                  ^\n  129 |     content: [\n  130 |       {\n  131 |         data: expect.any(String),"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts",
                        "column": 18,
                        "line": 128
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 16\u001b[39m\n\u001b[31m+ Received  +  2\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"content\": Array [\u001b[22m\n\u001b[2m      Object {\u001b[22m\n\u001b[32m-       \"data\": Any<String>,\u001b[39m\n\u001b[32m-       \"mimeType\": \"image/jpeg\",\u001b[39m\n\u001b[32m-       \"type\": \"image\",\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     Object {\u001b[39m\n\u001b[32m-       \"data\": Any<String>,\u001b[39m\n\u001b[32m-       \"mimeType\": \"image/jpeg\",\u001b[39m\n\u001b[32m-       \"type\": \"image\",\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     Object {\u001b[39m\n\u001b[32m-       \"data\": Any<String>,\u001b[39m\n\u001b[32m-       \"mimeType\": \"image/jpeg\",\u001b[39m\n\u001b[32m-       \"type\": \"image\",\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     Object {\u001b[39m\n\u001b[32m-       \"text\": StringContaining \"- Ran Playwright code:\",\u001b[39m\n\u001b[31m+       \"text\": \"Tool \\\"browser_screen_capture\\\" not found\",\u001b[39m\n\u001b[2m        \"type\": \"text\",\u001b[22m\n\u001b[2m      },\u001b[22m\n\u001b[2m    ],\u001b[22m\n\u001b[31m+   \"isError\": true,\u001b[39m\n\u001b[2m  }\u001b[22m\n\n  126 |   });\n  127 |\n> 128 |   expect(result).toEqual({\n      |                  ^\n  129 |     content: [\n  130 |       {\n  131 |         data: expect.any(String),\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts:128:18"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:05:00.209Z",
                  "annotations": [],
                  "attachments": [],
                  "errorLocation": {
                    "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts",
                    "column": 18,
                    "line": 128
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "25472900828a21a5e34e-1078505502b5b337665e",
          "file": "vision.spec.ts",
          "line": 108,
          "column": 1
        },
        {
          "title": "browser_screen_capture (multiple locators)",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 31,
                  "parallelIndex": 2,
                  "status": "failed",
                  "duration": 1422,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 11\u001b[39m\n\u001b[31m+ Received  +  2\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"content\": Array [\u001b[22m\n\u001b[2m      Object {\u001b[22m\n\u001b[32m-       \"data\": Any<String>,\u001b[39m\n\u001b[32m-       \"mimeType\": \"image/jpeg\",\u001b[39m\n\u001b[32m-       \"type\": \"image\",\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     Object {\u001b[39m\n\u001b[32m-       \"data\": Any<String>,\u001b[39m\n\u001b[32m-       \"mimeType\": \"image/jpeg\",\u001b[39m\n\u001b[32m-       \"type\": \"image\",\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     Object {\u001b[39m\n\u001b[32m-       \"text\": StringContaining \"- Ran Playwright code:\",\u001b[39m\n\u001b[31m+       \"text\": \"Tool \\\"browser_screen_capture\\\" not found\",\u001b[39m\n\u001b[2m        \"type\": \"text\",\u001b[22m\n\u001b[2m      },\u001b[22m\n\u001b[2m    ],\u001b[22m\n\u001b[31m+   \"isError\": true,\u001b[39m\n\u001b[2m  }\u001b[22m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 11\u001b[39m\n\u001b[31m+ Received  +  2\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"content\": Array [\u001b[22m\n\u001b[2m      Object {\u001b[22m\n\u001b[32m-       \"data\": Any<String>,\u001b[39m\n\u001b[32m-       \"mimeType\": \"image/jpeg\",\u001b[39m\n\u001b[32m-       \"type\": \"image\",\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     Object {\u001b[39m\n\u001b[32m-       \"data\": Any<String>,\u001b[39m\n\u001b[32m-       \"mimeType\": \"image/jpeg\",\u001b[39m\n\u001b[32m-       \"type\": \"image\",\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     Object {\u001b[39m\n\u001b[32m-       \"text\": StringContaining \"- Ran Playwright code:\",\u001b[39m\n\u001b[31m+       \"text\": \"Tool \\\"browser_screen_capture\\\" not found\",\u001b[39m\n\u001b[2m        \"type\": \"text\",\u001b[22m\n\u001b[2m      },\u001b[22m\n\u001b[2m    ],\u001b[22m\n\u001b[31m+   \"isError\": true,\u001b[39m\n\u001b[2m  }\u001b[22m\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts:172:18",
                    "location": {
                      "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts",
                      "column": 18,
                      "line": 172
                    },
                    "snippet": "  170 |   });\n  171 |\n> 172 |   expect(result).toEqual({\n      |                  ^\n  173 |     content: [\n  174 |       {\n  175 |         data: expect.any(String),"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts",
                        "column": 18,
                        "line": 172
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 11\u001b[39m\n\u001b[31m+ Received  +  2\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"content\": Array [\u001b[22m\n\u001b[2m      Object {\u001b[22m\n\u001b[32m-       \"data\": Any<String>,\u001b[39m\n\u001b[32m-       \"mimeType\": \"image/jpeg\",\u001b[39m\n\u001b[32m-       \"type\": \"image\",\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     Object {\u001b[39m\n\u001b[32m-       \"data\": Any<String>,\u001b[39m\n\u001b[32m-       \"mimeType\": \"image/jpeg\",\u001b[39m\n\u001b[32m-       \"type\": \"image\",\u001b[39m\n\u001b[32m-     },\u001b[39m\n\u001b[32m-     Object {\u001b[39m\n\u001b[32m-       \"text\": StringContaining \"- Ran Playwright code:\",\u001b[39m\n\u001b[31m+       \"text\": \"Tool \\\"browser_screen_capture\\\" not found\",\u001b[39m\n\u001b[2m        \"type\": \"text\",\u001b[22m\n\u001b[2m      },\u001b[22m\n\u001b[2m    ],\u001b[22m\n\u001b[31m+   \"isError\": true,\u001b[39m\n\u001b[2m  }\u001b[22m\n\n  170 |   });\n  171 |\n> 172 |   expect(result).toEqual({\n      |                  ^\n  173 |     content: [\n  174 |       {\n  175 |         data: expect.any(String),\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts:172:18"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:05:00.229Z",
                  "annotations": [],
                  "attachments": [],
                  "errorLocation": {
                    "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts",
                    "column": 18,
                    "line": 172
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "25472900828a21a5e34e-f67221f55b0034021269",
          "file": "vision.spec.ts",
          "line": 153,
          "column": 1
        },
        {
          "title": "browser_screen_capture (locator - no elements found)",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 27,
                  "parallelIndex": 4,
                  "status": "failed",
                  "duration": 1122,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"content\": Array [\u001b[22m\n\u001b[2m      Object {\u001b[22m\n\u001b[32m-       \"text\": StringContaining \"- Ran Playwright code:\",\u001b[39m\n\u001b[31m+       \"text\": \"Tool \\\"browser_screen_capture\\\" not found\",\u001b[39m\n\u001b[2m        \"type\": \"text\",\u001b[22m\n\u001b[2m      },\u001b[22m\n\u001b[2m    ],\u001b[22m\n\u001b[31m+   \"isError\": true,\u001b[39m\n\u001b[2m  }\u001b[22m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"content\": Array [\u001b[22m\n\u001b[2m      Object {\u001b[22m\n\u001b[32m-       \"text\": StringContaining \"- Ran Playwright code:\",\u001b[39m\n\u001b[31m+       \"text\": \"Tool \\\"browser_screen_capture\\\" not found\",\u001b[39m\n\u001b[2m        \"type\": \"text\",\u001b[22m\n\u001b[2m      },\u001b[22m\n\u001b[2m    ],\u001b[22m\n\u001b[31m+   \"isError\": true,\u001b[39m\n\u001b[2m  }\u001b[22m\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts:203:18",
                    "location": {
                      "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts",
                      "column": 18,
                      "line": 203
                    },
                    "snippet": "  201 |   });\n  202 |\n> 203 |   expect(result).toEqual({\n      |                  ^\n  204 |     content: [\n  205 |       {\n  206 |         text: expect.stringContaining('- Ran Playwright code:'),"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts",
                        "column": 18,
                        "line": 203
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 1\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"content\": Array [\u001b[22m\n\u001b[2m      Object {\u001b[22m\n\u001b[32m-       \"text\": StringContaining \"- Ran Playwright code:\",\u001b[39m\n\u001b[31m+       \"text\": \"Tool \\\"browser_screen_capture\\\" not found\",\u001b[39m\n\u001b[2m        \"type\": \"text\",\u001b[22m\n\u001b[2m      },\u001b[22m\n\u001b[2m    ],\u001b[22m\n\u001b[31m+   \"isError\": true,\u001b[39m\n\u001b[2m  }\u001b[22m\n\n  201 |   });\n  202 |\n> 203 |   expect(result).toEqual({\n      |                  ^\n  204 |     content: [\n  205 |       {\n  206 |         text: expect.stringContaining('- Ran Playwright code:'),\n    at /Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts:203:18"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:04:59.774Z",
                  "annotations": [],
                  "attachments": [],
                  "errorLocation": {
                    "file": "/Users/a1/Projects/playwright-mcp-advanced/tests/vision.spec.ts",
                    "column": 18,
                    "line": 203
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "25472900828a21a5e34e-cf107726c3b23319a2ed",
          "file": "vision.spec.ts",
          "line": 192,
          "column": 1
        }
      ]
    },
    {
      "title": "wait.spec.ts",
      "file": "wait.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "browser_wait_for(text)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 32,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 2858,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:05:00.645Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "de18659a427ead302478-239b1cc9de494cf57a92",
          "file": "wait.spec.ts",
          "line": 19,
          "column": 1
        },
        {
          "title": "browser_wait_for(textGone)",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 25,
                  "parallelIndex": 3,
                  "status": "passed",
                  "duration": 2787,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:05:00.706Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "de18659a427ead302478-4b3171aa6eca4c701e1f",
          "file": "wait.spec.ts",
          "line": 53,
          "column": 1
        }
      ]
    },
    {
      "title": "webdriver.spec.ts",
      "file": "webdriver.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "do not falsely advertise user agent as a test driver",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 15000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chrome",
              "projectName": "chrome",
              "results": [
                {
                  "workerIndex": 33,
                  "parallelIndex": 4,
                  "status": "passed",
                  "duration": 1752,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-07-18T04:05:01.826Z",
                  "annotations": [],
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "d434cb08b3dd709f324e-c95b822f37f8b3d63dd5",
          "file": "webdriver.spec.ts",
          "line": 19,
          "column": 1
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-07-18T04:04:12.471Z",
    "duration": 51131.111,
    "expected": 77,
    "skipped": 1,
    "unexpected": 30,
    "flaky": 0
  }
}
